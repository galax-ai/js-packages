{"version":3,"sources":["../lib/cmd.js"],"sourcesContent":["import childProcess from 'node:child_process';\nimport { consoleLog, consoleError } from './functions';\n\n/**\n * Execute a shell command.\n * @function module:cmd.run_\n * @param {string} cmd - Command line to execute\n * @param {object} options\n * @returns {Promise.<Object>}\n */\nexport const run_ = (cmd, options) =>\n    new Promise((resolve, reject) =>\n        childProcess.exec(cmd, { windowsHide: true, ...options }, (error, stdout, stderr) => {\n            if (error) {\n                return reject(error);\n            }\n\n            return resolve({ stdout, stderr });\n        })\n    );\n\n/**\n * Execute a shell command and lively output\n * @function module:cmd.runLive_\n * @param {string} cmd - Command line to execute\n * @param {Array} [args] - Arguments list *\n * @param {*} onStdOut -\n * @param {*} onStdErr\n * @param {*} options\n * @returns {Promise.<Object>}\n */\nexport const runLive_ = (cmd, args, onStdOut, onStdErr, options) =>\n    new Promise((resolve, reject) => {\n        let ps = childProcess.spawn(cmd, args, {\n            windowsHide: true,\n            ...options,\n        });\n        let e;\n\n        onStdOut ??= consoleLog;\n        onStdErr ??= consoleError;\n\n        ps.stdout.on('data', onStdOut);\n        ps.stderr.on('data', onStdErr);\n\n        ps.on('close', (code) => (e ? reject(e) : resolve(code)));\n        ps.on('error', (error) => {\n            e = error;\n        });\n    });\n\n/**\n * Execute a shell command synchronously\n * @function module:cmd.runSync\n * @param {string} cmd - Command line to execute\n * @returns {string}\n */\nexport const runSync = (cmd, options) => childProcess.execSync(cmd, { windowsHide: true, ...options }).toString();\n"],"names":["run_","runLive_","runSync","cmd","options","Promise","resolve","reject","childProcess","exec","windowsHide","error","stdout","stderr","args","onStdOut","onStdErr","ps","spawn","e","consoleLog","consoleError","on","code","execSync","toString"],"mappings":"2MAUaA,IAAI,mBAAJA,MAqBAC,QAAQ,mBAARA,UA0BAC,OAAO,mBAAPA,qEAzDY,gDACgB,mGASlC,MAAMF,KAAO,CAACG,IAAKC,UACtB,IAAIC,QAAQ,CAACC,QAASC,SAClBC,0BAAY,CAACC,IAAI,CAACN,IAAK,CAAEO,YAAa,IAAI,CAAE,GAAGN,OAAO,AAAC,EAAG,CAACO,MAAOC,OAAQC,SAAW,CACjF,GAAIF,MAAO,CACP,OAAOJ,OAAOI,MAClB,CAAC,AAED,OAAOL,QAAQ,CAAEM,OAAQC,MAAO,EACpC,IAaD,MAAMZ,SAAW,CAACE,IAAKW,KAAMC,SAAUC,SAAUZ,UACpD,IAAIC,QAAQ,CAACC,QAASC,SAAW,CAC7B,IAAIU,GAAKT,0BAAY,CAACU,KAAK,CAACf,IAAKW,KAAM,CACnCJ,YAAa,IAAI,CACjB,GAAGN,OAAO,AACd,GACA,IAAIe,EAEJJ,WAAaK,qBAAU,CACvBJ,WAAaK,uBAAY,CAEzBJ,GAAGL,MAAM,CAACU,EAAE,CAAC,OAAQP,UACrBE,GAAGJ,MAAM,CAACS,EAAE,CAAC,OAAQN,UAErBC,GAAGK,EAAE,CAAC,QAAS,AAACC,MAAUJ,EAAIZ,OAAOY,GAAKb,QAAQiB,KAAK,EACvDN,GAAGK,EAAE,CAAC,QAAS,AAACX,OAAU,CACtBQ,EAAIR,KACR,EACJ,GAQG,MAAMT,QAAU,CAACC,IAAKC,UAAYI,0BAAY,CAACgB,QAAQ,CAACrB,IAAK,CAAEO,YAAa,IAAI,CAAE,GAAGN,OAAO,AAAC,GAAGqB,QAAQ"}