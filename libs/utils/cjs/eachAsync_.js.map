{"version":3,"sources":["../eachAsync_.js"],"sourcesContent":["import isPlainObject from './isPlainObject';\n\n/**\n * Iterate an array of an object asynchronously\n * @alias collection.eachAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} iterator\n * @returns {Promise.<Array|Object>}\n */\nasync function eachAsync_(obj, iterator) {\n    if (Array.isArray(obj)) {\n        let r = [];\n\n        let l = obj.length;\n        for (let i = 0; i < l; i++) {\n            r.push(await iterator(obj[i], i, obj));\n        }\n\n        return r;\n    }\n\n    if (isPlainObject(obj)) {\n        let r = {};\n\n        for (let k in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, k)) {\n                r[k] = await iterator(obj[k], k, obj);\n            }\n        }\n\n        return r;\n    }\n\n    return Promise.reject('Invalid argument!');\n}\n\nexport default eachAsync_;\n"],"names":["eachAsync_","obj","iterator","Array","isArray","r","l","length","i","push","isPlainObject","k","Object","prototype","hasOwnProperty","call","Promise","reject"],"mappings":"oGAqCA,iDAAA,kEArC0B,wGAU1B,eAAeA,WAAWC,GAAG,CAAEC,QAAQ,CAAE,CACrC,GAAIC,MAAMC,OAAO,CAACH,KAAM,CACpB,IAAII,EAAI,EAAE,CAEV,IAAIC,EAAIL,IAAIM,MAAM,CAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CACxBH,EAAEI,IAAI,CAAC,MAAMP,SAASD,GAAG,CAACO,EAAE,CAAEA,EAAGP,KACrC,CAEA,OAAOI,CACX,CAAC,AAED,GAAIK,GAAAA,sBAAa,EAACT,KAAM,CACpB,IAAII,EAAI,CAAC,EAET,IAAK,IAAIM,KAAKV,IAAK,CACf,GAAIW,OAAOC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,IAAKU,GAAI,CAC9CN,CAAC,CAACM,EAAE,CAAG,MAAMT,SAASD,GAAG,CAACU,EAAE,CAAEA,EAAGV,IACrC,CAAC,AACL,CAEA,OAAOI,CACX,CAAC,AAED,OAAOW,QAAQC,MAAM,CAAC,oBAC1B,OAEA,SAAejB"}