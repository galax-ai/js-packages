{"version":3,"sources":["../findAsync_.js"],"sourcesContent":["import findKeyAsync_ from './findKeyAsync_';\n\n/**\n * Iterate a collection asynchronously until predicate returns true\n * The returned value is undefined if not found.\n * That's different from the _.find() function in lodash.\n * @alias collection.findAsync_\n * @async\n * @param {Array|Object} obj\n * @param {asyncIterator} asyncPredicate_\n * @returns {Promise.<Object|undefined>}\n */\nasync function findAsync_(obj, asyncPredicate_) {\n    const k = await findKeyAsync_(obj, asyncPredicate_);\n    return obj[k];\n}\n\nexport default findAsync_;\n"],"names":["findAsync_","obj","asyncPredicate_","k","findKeyAsync_"],"mappings":"oGAiBA,iDAAA,kEAjB0B,wGAY1B,eAAeA,WAAWC,GAAG,CAAEC,eAAe,CAAE,CAC5C,MAAMC,EAAI,MAAMC,GAAAA,sBAAa,EAACH,IAAKC,iBACnC,OAAOD,GAAG,CAACE,EAAE,AACjB,OAEA,SAAeH"}