{"version":3,"sources":["../unquote.js"],"sourcesContent":["import replaceAll from './replaceAll';\n\n/**\n * Unquote a string\n * @function string.unquote\n * @param {String} str\n * @param {boolean} [unescape=false] - True to unescape slashed quote, default false\n * @param {Set|Array} [quoteSet] - Set of chars\n * @returns {String}\n */\nfunction unquote(str, unescape, quoteSet) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n\n    if (str.length < 2) {\n        return str;\n    }\n\n    let start = str[0];\n    if (start !== str[str.length - 1]) {\n        return str;\n    }\n\n    if (quoteSet) {\n        if (Array.isArray(quoteSet)) {\n            quoteSet = new Set(quoteSet);\n        }\n\n        if (!quoteSet.has(start)) {\n            return str;\n        }\n    }\n\n    str = str.slice(1, -1);\n\n    if (unescape) {\n        return replaceAll(str, '\\\\' + start, start);\n    }\n\n    return str;\n}\n\nexport default unquote;\n"],"names":["unquote","str","unescape","quoteSet","length","start","Array","isArray","Set","has","slice","replaceAll"],"mappings":"oGA2CA,iDAAA,+DA3CuB,qGAUvB,SAASA,QAAQC,GAAG,CAAEC,QAAQ,CAAEC,QAAQ,CAAE,CACtC,GAAI,OAAOF,MAAQ,SAAU,CACzB,OAAOA,GACX,CAAC,AAED,GAAIA,IAAIG,MAAM,CAAG,EAAG,CAChB,OAAOH,GACX,CAAC,AAED,IAAII,MAAQJ,GAAG,CAAC,EAAE,CAClB,GAAII,QAAUJ,GAAG,CAACA,IAAIG,MAAM,CAAG,EAAE,CAAE,CAC/B,OAAOH,GACX,CAAC,AAED,GAAIE,SAAU,CACV,GAAIG,MAAMC,OAAO,CAACJ,UAAW,CACzBA,SAAW,IAAIK,IAAIL,SACvB,CAAC,AAED,GAAI,CAACA,SAASM,GAAG,CAACJ,OAAQ,CACtB,OAAOJ,GACX,CAAC,AACL,CAAC,AAEDA,IAAMA,IAAIS,KAAK,CAAC,EAAG,CAAC,GAEpB,GAAIR,SAAU,CACV,MAAOS,GAAAA,mBAAU,EAACV,IAAK,KAAOI,MAAOA,MACzC,CAAC,AAED,OAAOJ,GACX,OAEA,SAAeD"}