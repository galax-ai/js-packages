{"version":3,"sources":["../cowSet.js"],"sourcesContent":["import _clone from 'lodash/clone';\nimport isInteger, { RANGE_INDEX } from './isInteger';\n\nimport { addEntry } from './set';\n\n// copy on write set\nfunction cowSet(collection, keyPath, value, options) {\n    options = { numberAsArrayIndex: true, keyPathSeparator: '.', ...options };\n\n    if (collection == null || typeof collection !== 'object') {\n        return collection;\n    }\n\n    if (keyPath == null) {\n        return collection;\n    }\n\n    let nodes = Array.isArray(keyPath) ? keyPath.concat() : keyPath.split(options.keyPathSeparator);\n    const length = nodes.length;\n\n    if (length > 0) {\n        const lastIndex = length - 1;\n\n        let index = 0;\n        let nested = _clone(collection);\n        collection = nested;\n\n        while (nested != null && index < lastIndex) {\n            const key = nodes[index++];\n\n            let next = nested[key];\n            if (next == null || typeof next !== 'object') {\n                // peek next node, see if it is integer\n                const nextKey = nodes[index];\n\n                if (options.numberAsArrayIndex && isInteger(nextKey, { range: RANGE_INDEX })) {\n                    next = addEntry(nested, key, [], options.numberAsArrayIndex);\n                } else {\n                    next = addEntry(nested, key, {}, options.numberAsArrayIndex);\n                }\n\n                nested = next;\n            } else {\n                nested[key] = _clone(next);\n                nested = nested[key];\n            }\n        }\n\n        const lastKey = nodes[lastIndex];\n        addEntry(nested, lastKey, value, options.numberAsArrayIndex);\n    }\n\n    return collection;\n}\n\nexport default cowSet;\n"],"names":["cowSet","collection","keyPath","value","options","numberAsArrayIndex","keyPathSeparator","nodes","Array","isArray","concat","split","length","lastIndex","index","nested","_clone","key","next","nextKey","isInteger","range","RANGE_INDEX","addEntry","lastKey"],"mappings":"oGAuDA,iDAAA,0DAvDmB,oEACoB,mCAEd,mjCAGzB,SAASA,OAAOC,UAAU,CAAEC,OAAO,CAAEC,KAAK,CAAEC,OAAO,CAAE,CACjDA,QAAU,CAAEC,mBAAoB,IAAI,CAAEC,iBAAkB,IAAK,GAAGF,OAAO,AAAC,EAExE,GAAIH,YAAc,IAAI,EAAI,OAAOA,aAAe,SAAU,CACtD,OAAOA,UACX,CAAC,AAED,GAAIC,SAAW,IAAI,CAAE,CACjB,OAAOD,UACX,CAAC,AAED,IAAIM,MAAQC,MAAMC,OAAO,CAACP,SAAWA,QAAQQ,MAAM,GAAKR,QAAQS,KAAK,CAACP,QAAQE,gBAAgB,CAAC,CAC/F,MAAMM,OAASL,MAAMK,MAAM,CAE3B,GAAIA,OAAS,EAAG,CACZ,MAAMC,UAAYD,OAAS,EAE3B,IAAIE,MAAQ,EACZ,IAAIC,OAASC,GAAAA,cAAM,EAACf,YACpBA,WAAac,OAEb,MAAOA,QAAU,IAAI,EAAID,MAAQD,UAAW,CACxC,MAAMI,IAAMV,KAAK,CAACO,QAAQ,CAE1B,IAAII,KAAOH,MAAM,CAACE,IAAI,CACtB,GAAIC,MAAQ,IAAI,EAAI,OAAOA,OAAS,SAAU,CAE1C,MAAMC,QAAUZ,KAAK,CAACO,MAAM,CAE5B,GAAIV,QAAQC,kBAAkB,EAAIe,GAAAA,kBAAS,EAACD,QAAS,CAAEE,MAAOC,sBAAW,AAAC,GAAI,CAC1EJ,KAAOK,GAAAA,aAAQ,EAACR,OAAQE,IAAK,EAAE,CAAEb,QAAQC,kBAAkB,CAC/D,KAAO,CACHa,KAAOK,GAAAA,aAAQ,EAACR,OAAQE,IAAK,CAAC,EAAGb,QAAQC,kBAAkB,CAC/D,CAAC,AAEDU,OAASG,IACb,KAAO,CACHH,MAAM,CAACE,IAAI,CAAGD,GAAAA,cAAM,EAACE,MACrBH,OAASA,MAAM,CAACE,IAAI,AACxB,CAAC,AACL,CAEA,MAAMO,QAAUjB,KAAK,CAACM,UAAU,CAChCU,GAAAA,aAAQ,EAACR,OAAQS,QAASrB,MAAOC,QAAQC,kBAAkB,CAC/D,CAAC,AAED,OAAOJ,UACX,OAEA,SAAeD"}