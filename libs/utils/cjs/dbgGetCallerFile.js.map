{"version":3,"sources":["../dbgGetCallerFile.js"],"sourcesContent":["/**\n * Get the nth call file name from callstack\n * @param {integer} depth - the nth depth, 0 means the file call this function, usually depth 1 is most expected result\n * @returns {string} filename\n */\nfunction dbgGetCallerFile(depth = 1) {\n    const originalFunc = Error.prepareStackTrace;\n\n    let callerfile;\n    try {\n        const err = new Error();\n        let currentfile;\n        let currentDepth = 0;\n\n        Error.prepareStackTrace = function (err, stack) {\n            return stack;\n        };\n\n        currentfile = err.stack.shift().getFileName();\n\n        while (err.stack.length) {\n            callerfile = err.stack.shift().getFileName();\n\n            if (currentfile !== callerfile) {\n                currentDepth++;\n                currentfile = callerfile;\n                if (currentDepth > depth) break;\n            }\n        }\n        // eslint-disable-next-line no-empty\n    } finally {\n    }\n\n    Error.prepareStackTrace = originalFunc;\n\n    return callerfile;\n}\n\nexport default dbgGetCallerFile;\n"],"names":["dbgGetCallerFile","depth","originalFunc","Error","prepareStackTrace","callerfile","err","currentfile","currentDepth","stack","shift","getFileName","length"],"mappings":"oGAsCA,iDAAA,YAjCA,SAASA,iBAAiBC,MAAQ,CAAC,CAAE,CACjC,MAAMC,aAAeC,MAAMC,iBAAiB,CAE5C,IAAIC,WACJ,GAAI,CACA,MAAMC,IAAM,IAAIH,MAChB,IAAII,YACJ,IAAIC,aAAe,CAEnBL,CAAAA,MAAMC,iBAAiB,CAAG,SAAUE,GAAG,CAAEG,KAAK,CAAE,CAC5C,OAAOA,KACX,EAEAF,YAAcD,IAAIG,KAAK,CAACC,KAAK,GAAGC,WAAW,GAE3C,MAAOL,IAAIG,KAAK,CAACG,MAAM,CAAE,CACrBP,WAAaC,IAAIG,KAAK,CAACC,KAAK,GAAGC,WAAW,GAE1C,GAAIJ,cAAgBF,WAAY,CAC5BG,eACAD,YAAcF,WACd,GAAIG,aAAeP,MAAO,KAAM,AACpC,CAAC,AACL,CAEJ,QAAU,CACV,CAEAE,MAAMC,iBAAiB,CAAGF,aAE1B,OAAOG,UACX,OAEA,SAAeL"}