{"version":3,"sources":["../lib/Runnable.js"],"sourcesContent":["import { _, sleep_, batchAsync_ } from '@galaxar/utils';\nimport { InvalidConfiguration } from '@galaxar/types';\nimport { defaultAppOpts } from './defaultOpts';\n\n/**\n * Runnable app mixin.\n * @param {object} T - Base class.\n * @returns {Runnable} A runable app class.\n * @constructs Runnable(T)\n */\nconst Runnable = (T) =>\n    class extends T {\n        _getOnUncaughtException = (exitOnError) => (err) => {\n            if (exitOnError) {\n                //wait 1 second for flushing the last log\n                this.log('error', err);\n            } else {\n                this.logError(err);\n            }\n        };\n\n        _onWarning = (warning) => {\n            this.log('warn', warning.message);\n        };\n\n        _onExit = (code) => {\n            if (this.started) {\n                this.stop_().catch(this.logError);\n            }\n        };\n\n        /**\n         * @param {string} name - The name of the application.\n         * @param {object} [options] - Application options\n         * @property {string} [options.logLevel='info'] - Logging level\n         * @property {object} [options.ignoreUncaught=false] - Whether to skip the handling of uncaught exception\n         * @property {object} [options.exitOnUncaught=true] - Whether to exit process on uncaught exception thrown\n         * @constructs Runnable\n         */\n        constructor(name, options) {\n            super(name, {\n                ...defaultAppOpts,\n                ...options,\n            });\n\n            this.runnable = true;\n\n            this.libModulesPath = this.toAbsolutePath(this.options.libModulesPath);\n        }\n\n        /**\n         * Start the app\n         * @returns {Promise}\n         * @memberof Runnable\n         */\n        async start_() {\n            if (this.started) {\n                throw new Error('App already started.');\n            }\n\n            this._initialize();\n\n            process.on('exit', this._onExit);\n\n            await super.start_();\n\n            if (this.options.logLevel === 'verbose' || this.options.logLevel === 'debug') {\n                const childModules = {};\n                this.visitChildModules((childModule, name) => {\n                    childModules[name] = {\n                        features: Object.keys(childModule.features),\n                        services: Object.keys(childModule.services),\n                    };\n                });\n\n                this.log('verbose', 'Enabled features & services:', {\n                    features: Object.keys(this.features),\n                    services: Object.keys(this.services),\n                    modules: childModules,\n                });\n            }\n\n            return this;\n        }\n\n        /**\n         * Stop the app\n         * @returns {Promise}\n         * @memberof Runnable\n         */\n        async stop_() {\n            let stopByThis = false;\n\n            if (this.started) {\n                stopByThis = true;\n\n                if (this.libModules) {\n                    await batchAsync_(this.libModules, (lib) => lib.stop_());\n                    delete this.libModules;\n                }\n            }\n\n            process.removeListener('exit', this._onExit);\n\n            await super.stop_();\n\n            await sleep_(0);\n\n            if (stopByThis) {\n                this._uninitialize();\n            }\n        }\n\n        visitChildModules(vistor) {\n            if (this.libModules) {\n                _.each(this.libModules, vistor);\n            }\n        }\n\n        /**\n         * Get the lib module\n         * @param {string} libName\n         * @memberof Runnable\n         */\n        getLib(libName) {\n            if (!this.libModules) {\n                throw new Error('\"libModules\" feature is required to access lib among modules.');\n            }\n\n            let libModule = this.libModules[libName];\n\n            if (!libModule) {\n                throw new Error(`Lib module [${libName}] not found.`);\n            }\n\n            return libModule;\n        }\n\n        /**\n         * Require a module from the source path of a library module\n         * @param {*} relativePath\n         * @memberof Runnable\n         */\n        requireFromLib(libName, relativePath) {\n            let libModule = this.getLib(libName);\n            return libModule.require(relativePath);\n        }\n\n        /**\n         * Register a loaded lib module\n         * @param {LibModule} lib\n         * @memberof Runnable\n         */\n        registerLib(lib) {\n            if (!this.libModules) {\n                this.libModules = {};\n            }\n\n            if (lib.name in this.libModules) {\n                throw new InvalidConfiguration(`Lib module [${lib.name}] already exists.`, this, {\n                    name: lib.name,\n                });\n            }\n\n            this.libModules[lib.name] = lib;\n        }\n\n        /**\n         * Get a registered service\n         * @param {string} name\n         *\n         * @example\n         *  // Get service from a lib module\n         *  const service = app.getService('<lib name>/<service name>');\n         *  // e.g const service = app.getService('data/mysql.mydb');\n         * @memberof Runnable\n         */\n        getService(name) {\n            let pos = name.indexOf('/');\n            if (pos === -1) {\n                return super.getService(name);\n            }\n\n            let lib = name.substring(0, pos);\n            name = name.substring(pos + 1);\n\n            let app = this.getLib(lib);\n            return app?.getService(name, true);\n        }\n\n        _initialize() {\n            this._pwd = process.cwd();\n            if (this.workingPath !== this._pwd) {\n                process.chdir(this.workingPath);\n            }\n\n            this._injectErrorHandlers();\n        }\n\n        _uninitialize() {\n            const detach = true;\n            this._injectErrorHandlers(detach);\n\n            process.chdir(this._pwd);\n            delete this._pwd;\n        }\n\n        _injectErrorHandlers(detach) {\n            if (detach) {\n                process.removeListener('warning', this._onWarning);\n                if (this._onUncaughtException) {\n                    process.removeListener('uncaughtException', this._onUncaughtException);\n                    delete this._onUncaughtException;\n                }\n\n                return;\n            }\n\n            if (!this.options.ignoreUncaught) {\n                this._onUncaughtException = this._getOnUncaughtException(this.options.exitOnUncaught);\n                process.on('uncaughtException', this._onUncaughtException);\n            }\n\n            process.on('warning', this._onWarning);\n        }\n    };\n\nexport default Runnable;\n"],"names":["Runnable","T","start_","started","Error","_initialize","process","on","_onExit","options","logLevel","childModules","visitChildModules","childModule","name","features","Object","keys","services","log","modules","stop_","stopByThis","libModules","batchAsync_","lib","removeListener","sleep_","_uninitialize","vistor","_","each","getLib","libName","libModule","requireFromLib","relativePath","require","registerLib","InvalidConfiguration","getService","pos","indexOf","substring","app","_pwd","cwd","workingPath","chdir","_injectErrorHandlers","detach","_onWarning","_onUncaughtException","ignoreUncaught","_getOnUncaughtException","exitOnUncaught","constructor","defaultAppOpts","exitOnError","err","logError","warning","message","code","catch","runnable","libModulesPath","toAbsolutePath"],"mappings":"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"}