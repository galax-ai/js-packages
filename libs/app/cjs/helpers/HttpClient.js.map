{"version":3,"sources":["../../lib/helpers/HttpClient.js"],"sourcesContent":["import { _, url as urlUtil } from '@galaxar/utils';\n\n/**\n * Enable a http client as service\n * @module Feature_HttpClient\n */\n\nconst DefaultMethods = {\n    get: 'get',\n    post: 'post',\n    put: 'put',\n    del: 'del',\n    delete: 'del',\n    upload: 'post',\n    download: 'get',\n};\n\nfunction resToPath(parts) {\n    return parts ? (Array.isArray(parts) ? parts.map((res) => encodeURIComponent(res)).join('/') : parts) : '';\n}\n\n/**\n * HTTP client.\n * @class\n */\nclass HttpClient {\n    /**\n     *\n     * @param {*} endpoint\n     */\n    constructor(agent, endpointOrOptions) {\n        this.agent = agent;\n        this.options = typeof endpointOrOptions === 'string' ? { endpoint: endpointOrOptions } : endpointOrOptions;\n    }\n\n    /**\n     * Initialize a request instance\n     * @param {string} httpMethod\n     * @param {string} url\n     * @returns {Request}\n     */\n    initReq(httpMethod, url) {\n        return this.agent[httpMethod](url);\n    }\n\n    /**\n     *\n     * @param {string} method\n     * @param {string} path\n     * @param {object} query\n     * @param {object} body\n     * @param {object} options - Request options\n     * @property {string} [options.httpMethod] - Specified the http method to override the method argument\n     * @property {string} [options.endpoint] - Specified the base endpoint for this request only\n     * @property {function} [options.onSend] - Specified the onSend hook for this request only\n     * @property {integer} [options.timeout] - Specified the timeout setting for this request only\n     * @property {object} [options.headers] - Specified the headers for this request only\n     * @property {boolean} [options.withCredentials] - Specified the withCredentials header for CORS\n     * @property {object} [options.formData] - Specified the form fields\n     * @property {object} [options.fileField='file'] - Specified the file field name\n     * @property {object} [options.fileName] - Specified the file name to override the file to upload\n     * @property {function} [options.onProgress] - Specified the on progress callback\n     * @returns {*}\n     */\n    async do(method, path, query, body, options) {\n        method = method.toLowerCase();\n        const _options = { ...this.options, ...options };\n\n        let httpMethod = _options.httpMethod ?? DefaultMethods[method];\n        if (!httpMethod) {\n            throw new Error('Invalid method: ' + method);\n        }\n\n        let url = path.startsWith('http:') || path.startsWith('https:') ? path : urlUtil.join(_options.endpoint, path);\n\n        let req = this.initReq(httpMethod, url);\n\n        if (this.onSending) {\n            this.onSending(req);\n        }\n\n        if (_options.onSending) {\n            _options.onSending(req);\n        }\n\n        if (_options.timeout) {\n            req.timeout(_options.timeout);\n        }\n\n        if (_options.headers) {\n            _.each(_options.headers, (v, k) => {\n                req.set(k, v);\n            });\n        }\n\n        if (_options.withCredentials) {\n            req.withCredentials();\n        }\n\n        if (query) {\n            req.query(query);\n        }\n\n        if (method === 'download') {\n            if (httpMethod !== 'get') {\n                req.send(body);\n            }\n        } else if (method === 'upload') {\n            if (_options.formData) {\n                _.each(_options.formData, (v, k) => {\n                    req.field(k, v);\n                });\n            }\n            req.attach(_options.fileField ?? 'file', body, _options.fileName);\n        } else if (httpMethod !== 'get') {\n            req.send(body ?? _options.body);\n        }\n\n        if (_options.onProgress) {\n            req.on('progress', _options.onProgress);\n        }\n\n        try {\n            const res = await req;\n            const result = res.type.startsWith('text/') ? res.text : res.body;\n\n            if (this.onResponse) {\n                this.onResponse(req, res);\n            }\n\n            if (_options.onResponse) {\n                _options.onResponse(req, res);\n            }\n\n            return result;\n        } catch (error) {\n            const _onError = _options.onError ?? this.onError;\n\n            if (error.response && error.response.error) {\n                const _responseError = error.response.error;\n\n                if (error.response.type === 'application/json') {\n                    _responseError.body = JSON.parse(error.response.text);\n                }\n\n                if (_onError != null) {\n                    return _onError(_responseError, error);\n                }\n\n                throw _responseError;\n            }\n\n            if (_onError != null) {\n                return _onError(error);\n            }\n\n            throw error;\n        }\n    }\n\n    async get(resource, query, options) {\n        return this.do('get', resToPath(resource), query, null, options);\n    }\n\n    async post(resource, data, query, options) {\n        return this.do('post', resToPath(resource), query, data, options);\n    }\n\n    async put(resource, data, query, options) {\n        return this.do('put', resToPath(resource), query, data, options);\n    }\n\n    async del(resource, query, options) {\n        return this.do('del', resToPath(resource), query, null, options);\n    }\n\n    async delete(...args) {\n        return this.del(...args);\n    }\n\n    async upload(resource, file, query, options) {\n        return this.do('upload', resToPath(resource), query, file, options);\n    }\n\n    async download(resource, query, options) {\n        return this.do('download', resToPath(resource), query, null, options);\n    }\n}\n\nexport default HttpClient;\n"],"names":["DefaultMethods","get","post","put","del","delete","upload","download","resToPath","parts","Array","isArray","map","res","encodeURIComponent","join","HttpClient","initReq","httpMethod","url","agent","do","method","path","query","body","options","toLowerCase","_options","Error","startsWith","urlUtil","endpoint","req","onSending","timeout","headers","_","each","v","k","set","withCredentials","send","formData","field","attach","fileField","fileName","onProgress","on","result","type","text","onResponse","error","_onError","onError","response","_responseError","JSON","parse","resource","data","args","file","constructor","endpointOrOptions"],"mappings":"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"}