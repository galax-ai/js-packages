{"version":3,"sources":["../lib/ModuleBase.js"],"sourcesContent":["import path from \"node:path\";\n\nconst ModuleBase = (Base) =>\n    class extends Base {\n        /**\n         * @param {Runnable} hostApp\n         * @param {string} name - The name of the app module.\n         * @param {string} route - The base route of the app module.\n         * @param {string} appPath - The path to load the app's module files\n         * @param {object} [options] - The app module's extra options defined in its parent's configuration.\n         * @property {bool} [options.logWithAppName=false] - Flag to include app name in log message.\n         */\n        constructor(hostApp, name, appPath, options) {\n            super(\n                name,                \n                {\n                    workingPath: appPath,\n                    configPath: path.join(appPath, 'conf'),\n                    sourcePath: './',\n                    logWithAppName: true,\n                    ...options\n                }\n            );\n\n            /**\n             * Hosting app.\n             * @member {Runnable}\n             **/\n            this.host = hostApp;\n\n            /**\n             * Whether it is a server.\n             * @member {boolean}\n             **/\n            this.isServer = false;\n\n            /**\n             * Source files path.\n             * @member {string}\n             **/\n            this.sourcePath = this.toAbsolutePath(this.options.sourcePath);\n\n            this.featuresPath = path.resolve(this.sourcePath, this.options.featuresPath);\n        }\n\n        /**\n         * Get a service from module hierarchy\n         * @param name\n         * @returns {object}\n         */\n        getService(name, currentModuleOnly) {\n            return super.getService(name) || (!currentModuleOnly && this.host.getService(name));\n        }\n\n        /**\n         * Check whether a feature is enabled in the app or its hosting server.\n         * @param {string} feature\n         * @returns {bool}\n         */\n        enabled(feature, currentModuleOnly) {\n            return super.enabled(feature) || (!currentModuleOnly && this.host.enabled(feature));\n        }\n\n        /**\n         * Require a js module from backend path\n         * @param {*} relativePath\n         */\n        require(relativePath) {\n            let modPath = path.join(this.sourcePath, relativePath);\n            return require(modPath);\n        }\n\n        /**\n         * Require a module from the source path of a library module\n         * @param {*} relativePath\n         */\n        requireFromLib(libName, relativePath) {\n            return this.host.requireFromLib(libName, relativePath);\n        }\n\n        /**\n         * Default log method, may be override by loggers feature\n         * @param {string} level - Log level\n         * @param {string} message - Log message\n         * @param {...object} rest - Extra meta data\n         * @returns {Routable}\n         */\n        log(level, ...rest) {\n            if (this.options.logWithAppName) {\n                rest = [ \"[\" + this.name + \"]\", ...rest ];\n            }\n\n            if (this.logger) {\n                this.logger.log(level, ...rest);\n            } else {\n                this.host.log(level, ...rest);\n            }\n\n            return this;\n        }\n    };\n\nexport default ModuleBase;\n"],"names":["ModuleBase","Base","getService","name","currentModuleOnly","host","enabled","feature","require","relativePath","modPath","path","join","sourcePath","requireFromLib","libName","log","level","rest","options","logWithAppName","logger","constructor","hostApp","appPath","workingPath","configPath","isServer","toAbsolutePath","featuresPath","resolve"],"mappings":"oGAsGA,iDAAA,6DAtGiB,kGAEjB,MAAMA,WAAa,AAACC,OAChB,qBAAcA,KA+CVC,WAAWC,IAAI,CAAEC,iBAAiB,CAAE,CAChC,OAAO,KAAK,CAACF,UAAU,CAACC,OAAU,CAACC,mBAAqB,IAAI,CAACC,IAAI,CAACH,UAAU,CAACC,KACjF,CAOAG,QAAQC,OAAO,CAAEH,iBAAiB,CAAE,CAChC,OAAO,KAAK,CAACE,OAAO,CAACC,UAAa,CAACH,mBAAqB,IAAI,CAACC,IAAI,CAACC,OAAO,CAACC,QAC9E,CAMAC,QAAQC,YAAY,CAAE,CAClB,IAAIC,QAAUC,iBAAI,CAACC,IAAI,CAAC,IAAI,CAACC,UAAU,CAAEJ,cACzC,OAAOD,QAAQE,QACnB,CAMAI,eAAeC,OAAO,CAAEN,YAAY,CAAE,CAClC,OAAO,IAAI,CAACJ,IAAI,CAACS,cAAc,CAACC,QAASN,aAC7C,CASAO,IAAIC,KAAK,CAAE,GAAGC,IAAI,CAAE,CAChB,GAAI,IAAI,CAACC,OAAO,CAACC,cAAc,CAAE,CAC7BF,KAAO,CAAE,IAAM,IAAI,CAACf,IAAI,CAAG,OAAQe,KAAM,AAC7C,CAAC,AAED,GAAI,IAAI,CAACG,MAAM,CAAE,CACb,IAAI,CAACA,MAAM,CAACL,GAAG,CAACC,SAAUC,KAC9B,KAAO,CACH,IAAI,CAACb,IAAI,CAACW,GAAG,CAACC,SAAUC,KAC5B,CAAC,AAED,OAAO,IAAI,AACf,CAvFAI,YAAYC,OAAO,CAAEpB,IAAI,CAAEqB,OAAO,CAAEL,OAAO,CAAE,CACzC,KAAK,CACDhB,KACA,CACIsB,YAAaD,QACbE,WAAYf,iBAAI,CAACC,IAAI,CAACY,QAAS,QAC/BX,WAAY,KACZO,eAAgB,IAAI,CACpB,GAAGD,OAAO,AACd,EAOJ,CAAA,IAAI,CAACd,IAAI,CAAGkB,OAMZ,CAAA,IAAI,CAACI,QAAQ,CAAG,KAAK,AAMrB,CAAA,IAAI,CAACd,UAAU,CAAG,IAAI,CAACe,cAAc,CAAC,IAAI,CAACT,OAAO,CAACN,UAAU,CAE7D,CAAA,IAAI,CAACgB,YAAY,CAAGlB,iBAAI,CAACmB,OAAO,CAAC,IAAI,CAACjB,UAAU,CAAE,IAAI,CAACM,OAAO,CAACU,YAAY,CAC/E,CAyDJ,sBAEJ,SAAe7B"}