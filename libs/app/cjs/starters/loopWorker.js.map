{"version":3,"sources":["../../lib/starters/loopWorker.js"],"sourcesContent":["import { sleep_ } from '@galaxar/utils';\nimport startWorker from './worker';\n\n/**\n *\n * @param {Function} worker\n * @param {object} options\n * @property {integer} [options.interval=1000]\n */\nasync function startLoopWorker(worker, options) {\n    let { interval, ...workerOptions } = { interval: 1000, throwOnError: true, ...options };\n\n    return startWorker(async (app) => {\n        process.on('SIGINT', () => {\n            app.stop_()\n                .then(() => {})\n                .catch((error) => console.error(error.message || error));\n        });\n\n        let lastResult;\n\n        while (app.started) {\n            lastResult = await worker(app, lastResult);\n            if (app.started) {\n                await sleep_(interval);\n            }\n        }\n\n        return lastResult;\n    }, workerOptions);\n}\n\nexport default startLoopWorker;\n"],"names":["startLoopWorker","worker","options","interval","workerOptions","throwOnError","startWorker","app","process","on","stop_","then","catch","error","console","message","lastResult","started","sleep_"],"mappings":"oGAgCA,iDAAA,iCAhCuB,iEACC,iGAQxB,eAAeA,gBAAgBC,MAAM,CAAEC,OAAO,CAAE,CAC5C,GAAI,CAAEC,QAAQ,CAAE,GAAGC,cAAe,CAAG,CAAED,SAAU,IAAME,aAAc,IAAI,CAAE,GAAGH,OAAO,AAAC,EAEtF,MAAOI,GAAAA,eAAW,EAAC,MAAOC,KAAQ,CAC9BC,QAAQC,EAAE,CAAC,SAAU,IAAM,CACvBF,IAAIG,KAAK,GACJC,IAAI,CAAC,IAAM,CAAC,GACZC,KAAK,CAAC,AAACC,OAAUC,QAAQD,KAAK,CAACA,MAAME,OAAO,EAAIF,OACzD,GAEA,IAAIG,WAEJ,MAAOT,IAAIU,OAAO,CAAE,CAChBD,WAAa,MAAMf,OAAOM,IAAKS,YAC/B,GAAIT,IAAIU,OAAO,CAAE,CACb,MAAMC,GAAAA,aAAM,EAACf,SACjB,CAAC,AACL,CAEA,OAAOa,UACX,EAAGZ,cACP,OAEA,SAAeJ"}