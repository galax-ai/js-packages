{"version":3,"sources":["../../lib/features/serviceGroup.js"],"sourcesContent":["import { _, eachAsync_, batchAsync_ } from '@galaxar/utils';\nimport {InvalidConfiguration } from '@galaxar/types';\nimport Feature from '../Feature';\n\n/**\n * Enable a service group\n * @module Feature_ServiceGroup\n */\n\nmodule.exports = {\n    /**\n     * This feature is loaded at service stage\n     * @member {string}\n     */\n    stage: Feature.SERVICE,\n\n    /**\n     * Load the feature\n     * @param {App} app - The app module object\n     * @param {object} services - Map of services from service registration to service instance options\n     * @returns {Promise.<*>}\n     *\n     * @example\n     *\n     * serviceGroup: { 's3DigitalOcean': { '<instanceName>': {  } }   }\n     */\n    load_: async function (app, services) {\n        let features = [];\n        const instancesMap = {};\n\n        _.each(services, (instances, serviceName) => {\n            let feature = app._loadFeature(serviceName);\n            if (!feature.groupable) {\n                throw new InvalidConfiguration(\n                    `Feature [${serviceName}] is not groupable.`,\n                    app,\n                    `serviceGroup.${serviceName}`\n                );\n            }\n\n            features.push([feature]);\n            instancesMap[serviceName] = instances;\n        });\n\n        features = app._sortFeatures(features);\n\n        await eachAsync_(features, async ([feature]) => {\n            const instances = instancesMap[feature.name];\n            await batchAsync_(instances, (serviceOptions, instanceName) =>\n                feature.load_(app, serviceOptions, `${feature.name}-${instanceName}`)\n            );\n        });\n    },\n};\n"],"names":["module","exports","stage","Feature","SERVICE","load_","app","services","features","instancesMap","_","each","instances","serviceName","feature","_loadFeature","groupable","InvalidConfiguration","push","_sortFeatures","eachAsync_","name","batchAsync_","serviceOptions","instanceName"],"mappings":"2FAA2C,uCACP,kEAChB,mGAOpBA,OAAOC,OAAO,CAAG,CAKbC,MAAOC,gBAAO,CAACC,OAAO,CAYtBC,MAAO,eAAgBC,GAAG,CAAEC,QAAQ,CAAE,CAClC,IAAIC,SAAW,EAAE,CACjB,MAAMC,aAAe,CAAC,EAEtBC,QAAC,CAACC,IAAI,CAACJ,SAAU,CAACK,UAAWC,cAAgB,CACzC,IAAIC,QAAUR,IAAIS,YAAY,CAACF,aAC/B,GAAI,CAACC,QAAQE,SAAS,CAAE,CACpB,MAAM,IAAIC,2BAAoB,CAC1B,CAAC,SAAS,EAAEJ,YAAY,mBAAmB,CAAC,CAC5CP,IACA,CAAC,aAAa,EAAEO,YAAY,CAAC,CAC/B,AACN,CAAC,AAEDL,SAASU,IAAI,CAAC,CAACJ,QAAQ,CACvBL,CAAAA,YAAY,CAACI,YAAY,CAAGD,SAChC,GAEAJ,SAAWF,IAAIa,aAAa,CAACX,SAE7B,OAAMY,GAAAA,iBAAU,EAACZ,SAAU,MAAO,CAACM,QAAQ,GAAK,CAC5C,MAAMF,UAAYH,YAAY,CAACK,QAAQO,IAAI,CAAC,AAC5C,OAAMC,GAAAA,kBAAW,EAACV,UAAW,CAACW,eAAgBC,eAC1CV,QAAQT,KAAK,CAACC,IAAKiB,eAAgB,CAAC,EAAET,QAAQO,IAAI,CAAC,CAAC,EAAEG,aAAa,CAAC,EAE5E,EACJ,CACJ"}