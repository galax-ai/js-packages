{"version":3,"sources":["../lib/config.js"],"sourcesContent":["import { formatPath, makePath } from './utils';\n\nconst validatorHandlers = {};\nconst mapOfValidators = {};\n\n/**\n * Creates a new context object that represents the context of a child object within a larger data structure.\n * @param {Object} context - The current context of the data structure.\n * @param {*} currentValue - The current value of the object that the child object belongs to.\n * @param {string} childKey - The key of the child object within the parent object.\n * @param {*} childValue - The value of the child object.\n * @returns {Object} A new context object that represents the context of the child object within the larger data structure.\n */\nexport const getChildContext = (context, currentValue, childKey, childValue, extra) => ({\n    ...context,\n    ...extra,\n    path: makePath(childKey, context.path),\n    $$PARENT: currentValue,\n    $$CURRENT: childValue,\n    $$KEY: childKey,\n});\n\nexport const contextVarKeys = new Set(['$$ROOT', '$$PARENT', '$$CURRENT', '$$KEY']);\n\nexport const messages = {\n    //Exception messages\n    SYNTAX_OP_NOT_ALONE: 'Transformer operator can only be used alone in one pipeline stage.',\n    SYNTAX_INVALID_EXPR: (expr) => `Invalid expression syntax: ${JSON.stringify(expr)}`, // complext expr, not split out operator yet\n    SYNTAX_INVALID_OP: (op, prefix) => `Invalid operator \"${op}\" at ${formatPath(prefix)}.`,\n    SYNTAX_NUMBER_AS_EXPR: 'Number value cannot be used as a transformer expression.',\n    SYNTAX_INVALID_CONTEXT: (key) => `Invalid context variable \"${key}\".`,\n\n    INVALID_TRANSFORMER_OP: (op) => `Invalid transformer operator \"${op}\".`,\n    UNSUPPORTED_VALIDATION_OP: (op, prefix) => `Unsupported validation operator \"${op}\" at ${formatPath(prefix)}.`,\n    INVALID_COLLECTION_OP: (op) => `Invalid collection operator \"${op}\".`,\n\n    INVALID_TRANSFORMER_HANDLER: (tag) => `Handler for transformer \"${tag}\" not found.`,\n    INVALID_TEST_HANLDER: (tag) => `Handler for validator \"${tag}\" not found.`,\n\n    INVALID_OP_EXPR: (op, right, expected) => `Invalid \"${op}\" expression: ${JSON.stringify(right)}` + (expected ? `, expected: ${JSON.stringify(expected)}.` : '.'),\n    INVALID_COLLECTION_OP_EXPR: (collectionOp, op, right) =>\n        `Invalid \"${op}\" expression for collection \"${collectionOp}\" traversing: ${JSON.stringify(right)}.`,\n    UNSUPPORTED_TYPE: (type) => `Supported type \"${type}\".`,\n\n    OPERAND_NOT_TUPLE: (op) =>\n        `The right operand of a collection operator ${op ? '\"' + op + '\" ' : ''}must be a two-tuple.`,\n    OPERAND_NOT_TUPLE_2_OR_3: (op) => `The right operand of a \"${op}\" operator must be either a 2-tuple or a 3-tuple.`,\n    OPERAND_NOT_ARRAY: (op) => `The right operand of a \"${op}\" operator must be an array.`,\n    OPERAND_NOT_BOOL: (op) => `The right operand of a \"${op}\" operator must be a boolean value.`,\n    OPERAND_NOT_STRING: (op) => `The right operand of a \"${op}\" operator must be a string.`,\n    OPERAND_NOT_OBJECT: (op) => `The right operand of a \"${op}\" operator must be an object.`,\n\n    VALUE_NOT_ARRAY: (op) => `The value to take a \"${op}\" operator must be an array.`,\n    VALUE_NOT_COLLECTION: (op) => `The value to take a \"${op}\" operator must be either an object or an array.`,\n    VALUE_NOT_PRIMITIVE: (op) => `The value to take a \"${op}\" operator must be a primitive value, e.g. string, number.`,\n    VALUE_NOT_STRING: (op) => `The value to take a \"${op}\" operator must be a string.`,\n    VALUE_NOT_OBJECT: (op) => `The value to take a \"${op}\" operator must be an object.`,\n\n    REQUIRE_RIGHT_OPERAND: (op) => `Binary operator \"${op}\" requires a right operand.`,\n    RIGHT_OPERAND_NOT_EMPTY: (op) => `Unary operator \"${op}\" does not require a right operand.`,\n\n    MULTI_ERRORS: (numErrors) => `${numErrors} errors occurred.`,\n};\n\nconst messagesCache = {};\n\n//JSON Validation Syntax Runtime Configuration\nconst config = {\n    messages,\n    addValidatorToMap: (tokens, handler) => {\n        const [tag, ...alias] = tokens;\n\n        alias.forEach((op) => {\n            if (op in mapOfValidators) {\n                throw new Error(`Duplicate validator alias \"${op}\" for operator \"${tag}\".`);\n            }\n            mapOfValidators[op] = tag;\n        });\n\n        if (tag in validatorHandlers) {\n            throw new Error(`Duplicate operator name \"${tag}\".`);\n        }\n\n        validatorHandlers[tag] = handler;\n    },\n    overrideValidator: (tag, handler) => {\n        validatorHandlers[tag] = handler;\n    },\n\n    getValidatorTag: (op) => mapOfValidators[op],\n    getValidator: (tag) => validatorHandlers[tag],\n\n    loadMessages: (locale, moreMessages) => {\n        messagesCache[locale] = moreMessages;\n        return config;\n    },\n    setLocale: (locale) => {\n        if (locale in messagesCache) {            \n            Object.assign(messages, messagesCache[locale]);\n        }\n    }\n};\n\nexport default config;\n"],"names":["getChildContext","contextVarKeys","messages","validatorHandlers","mapOfValidators","context","currentValue","childKey","childValue","extra","path","makePath","$$PARENT","$$CURRENT","$$KEY","Set","SYNTAX_OP_NOT_ALONE","SYNTAX_INVALID_EXPR","expr","JSON","stringify","SYNTAX_INVALID_OP","op","prefix","formatPath","SYNTAX_NUMBER_AS_EXPR","SYNTAX_INVALID_CONTEXT","key","INVALID_TRANSFORMER_OP","UNSUPPORTED_VALIDATION_OP","INVALID_COLLECTION_OP","INVALID_TRANSFORMER_HANDLER","tag","INVALID_TEST_HANLDER","INVALID_OP_EXPR","right","expected","INVALID_COLLECTION_OP_EXPR","collectionOp","UNSUPPORTED_TYPE","type","OPERAND_NOT_TUPLE","OPERAND_NOT_TUPLE_2_OR_3","OPERAND_NOT_ARRAY","OPERAND_NOT_BOOL","OPERAND_NOT_STRING","OPERAND_NOT_OBJECT","VALUE_NOT_ARRAY","VALUE_NOT_COLLECTION","VALUE_NOT_PRIMITIVE","VALUE_NOT_STRING","VALUE_NOT_OBJECT","REQUIRE_RIGHT_OPERAND","RIGHT_OPERAND_NOT_EMPTY","MULTI_ERRORS","numErrors","messagesCache","config","addValidatorToMap","tokens","handler","alias","forEach","Error","overrideValidator","getValidatorTag","getValidator","loadMessages","locale","moreMessages","setLocale","Object","assign"],"mappings":"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"}