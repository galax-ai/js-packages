{"version":3,"sources":["../lib/validators.js"],"sourcesContent":["// JSON Validation Syntax\nimport { Types, Primitives } from '@galaxar/types';\nimport { isPlainObject, get as _get } from '@galaxar/utils';\n\nimport _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\nimport _size from 'lodash/size';\nimport _castArray from 'lodash/castArray';\nimport _mapValues from 'lodash/mapValues';\n\nimport JsvError from './JvsError';\nimport validate, { test } from './validate';\n\nimport config, { contextVarKeys } from './config';\n\nimport ops from './validateOperators';\n\nconst MSG = config.messages;\n\nfunction evaluateWithContext(value, context) {\n    if (value == null) {\n        return null;\n    }\n\n    if (context == null) {\n        context = {};\n    }\n\n    const type = typeof value;\n\n    if (type === 'string') {\n        if (value.startsWith('$$')) {\n            //get from context\n            const pos = value.indexOf('.');\n            if (pos === -1) {\n                if (!contextVarKeys.has(value)) {\n                    throw new Error(MSG.SYNTAX_INVALID_CONTEXT(value));\n                }\n                return context[value];\n            }\n\n            const key = value.substring(0, pos);\n            if (!contextVarKeys.has(key)) {\n                throw new Error(MSG.SYNTAX_INVALID_CONTEXT(key));\n            }\n\n            return _get(context, value);\n        }\n\n        return value;\n    }\n\n    if (Array.isArray(value)) {\n        return value.map((item) => evaluateWithContext(item, context));\n    }\n\n    if (type === 'object') {\n        return _mapValues(value, (item) => evaluateWithContext(item, context));\n    }\n\n    return value;\n}\n\nconst processRightValue = (right, context) =>\n    context.jsonx && ((typeof right === 'string' && right[0] === '$') || isPlainObject(right))\n        ? context.jsonx(undefined, right, context, true)\n        : evaluateWithContext(right, context);\n\n//Validators [ name, ...operator alias ]\nconst OP_EQUAL = [ops.EQUAL, '$eq', '$eql', '$equal', '$being'];\nconst OP_NOT_EQUAL = [ops.NOT_EQUAL, '$ne', '$neq', '$notEqual'];\nconst OP_NOT = [ops.NOT, '$not'];\nconst OP_GREATER_THAN = [ops.GREATER_THAN, '$gt', '$>', '$greaterThan'];\nconst OP_GREATER_THAN_OR_EQUAL = [ops.GREATER_THAN_OR_EQUAL, '$gte', '$>=', '$greaterThanOrEqual', '$min'];\nconst OP_LESS_THAN = [ops.LESS_THAN, '$lt', '$<', '$lessThan'];\nconst OP_LESS_THAN_OR_EQUAL = [ops.LESS_THAN_OR_EQUAL, '$lte', '$<=', '$lessThanOrEqual', '$max'];\nconst OP_LENGTH = [ops.LENGTH, '$length', '$size', '$capacity'];\nconst OP_IN = [ops.IN, '$in'];\nconst OP_NOT_IN = [ops.NOT_IN, '$nin', '$notIn'];\nconst OP_EXISTS = [ops.EXISTS, '$exist', '$exists', '$notNull'];\nconst OP_REQUIRED = [ops.REQUIRED, '$required', '$mandatory'];\nconst OP_MATCH = [ops.MATCH, '$has', '$match', '$all', '$should'];\nconst OP_MATCH_ANY = [ops.MATCH_ANY, '$any', '$or', '$either'];\nconst OP_ALL_MATCH = [ops.ALL_MATCH, '$allMatch', '|>$all', '|>$match'];\nconst OP_ANY_ONE_MATCH = [ops.ANY_ONE_MATCH, '$anyOneMatch', '|*$any', '|*$match', '|*$either'];\nconst OP_TYPE = [ops.TYPE, '$is', '$typeOf'];\nconst OP_HAS_KEYS = [ops.HAS_KEYS, '$hasKey', '$hasKeys', '$withKey', '$withKeys'];\nconst OP_START_WITH = [ops.START_WITH, '$startWith', '$startsWith'];\nconst OP_END_WITH = [ops.END_WITH, '$endWith', '$endsWith'];\nconst OP_SAME_AS = [ops.SAME_AS, '$sameAs'];\n\nconfig.addValidatorToMap(OP_EQUAL, (left, right, options, context) =>\n    _isEqual(left, processRightValue(right, context))\n);\nconfig.addValidatorToMap(\n    OP_NOT_EQUAL,\n    (left, right, options, context) => !_isEqual(left, processRightValue(right, context))\n);\nconfig.addValidatorToMap(OP_NOT, (left, ...args) => !test(left, ops.MATCH, ...args));\nconfig.addValidatorToMap(OP_GREATER_THAN, (left, right, options, context) => left > processRightValue(right, context));\nconfig.addValidatorToMap(\n    OP_GREATER_THAN_OR_EQUAL,\n    (left, right, options, context) => left >= processRightValue(right, context)\n);\nconfig.addValidatorToMap(OP_LESS_THAN, (left, right, options, context) => left < processRightValue(right, context));\nconfig.addValidatorToMap(\n    OP_LESS_THAN_OR_EQUAL,\n    (left, right, options, context) => left <= processRightValue(right, context)\n);\nconfig.addValidatorToMap(OP_LENGTH, (left, right, options, context) =>\n    test(_size(left), ops.MATCH, right, options, context)\n);\n\nconfig.addValidatorToMap(OP_IN, (left, right, options, context) => {\n    if (right == null) {\n        return false;\n    }\n\n    right = processRightValue(right, context);\n\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.IN));\n    }\n\n    const equal = config.getValidator(ops.EQUAL);\n    return right.find((element) => equal(left, element, options, context));\n});\n\nconfig.addValidatorToMap(OP_NOT_IN, (left, right, options, context) => {\n    if (right == null) {\n        return true;\n    }\n\n    right = processRightValue(right, context);\n\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.NOT_IN));\n    }\n\n    const notEqual = config.getValidator(ops.NOT_EQUAL);\n\n    return right.every((element) => notEqual(left, element, options, context));\n});\n\nconfig.addValidatorToMap(OP_EXISTS, (left, right) => {\n    if (typeof right !== 'boolean') {\n        throw new Error(MSG.OPERAND_NOT_BOOL(ops.EXISTS));\n    }\n\n    return right ? left != null : left == null;\n});\n\nconfig.addValidatorToMap(OP_REQUIRED, (left, right) => {\n    if (typeof right !== 'boolean') {\n        throw new Error(MSG.OPERAND_NOT_BOOL(ops.OP_REQUIRED));\n    }\n\n    return right ? left != null : true;\n});\n\nconfig.addValidatorToMap(OP_MATCH, (left, right, options, context) => {\n    if (Array.isArray(right)) {\n        const errors = [];\n\n        right.every((rule) => {\n            const reason = validate(left, rule, { ...options, asPredicate: false }, context);\n            \n            if (reason !== true) {\n                errors.push(..._castArray(reason));\n\n                if (options.abortEarly) {\n                    return false;\n                }\n            }\n\n            return true;\n        });\n\n        if (errors.length > 0) {\n            if (options.throwError) {\n                throw new JsvError(errors, left, context.path);\n            }\n\n            if (!options.asPredicate) {\n                context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    const reason2 = validate(left, right, options, context);\n    if (reason2 !== true) {\n        if (!options.asPredicate) {\n            context.$$ERROR = reason2;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_MATCH_ANY, (left, right, options, context) => {\n    if (!Array.isArray(right)) {\n        throw new Error(MSG.OPERAND_NOT_ARRAY(ops.MATCH_ANY));\n    }\n\n    let found = right.find((rule) => {\n        const reason = validate(left, rule, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.MATCH_ANY](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_ALL_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ALL_MATCH));\n    }\n\n    const errors = [];\n\n    left.every((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, asPredicate: false }, context);\n        if (reason !== true) {\n            errors.push(MSG.validationErrors[ops.ALL_MATCH](context.name, left, right, context), ..._castArray(reason));\n\n            if (options.abortEarly) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (errors.length > 0) {\n        if (options.throwError) {\n            throw new JsvError(errors, left, context.path);\n        }\n\n        if (!options.asPredicate) {\n            context.$$ERROR = errors.length === 1 && options.plainError ? errors[0] : errors;\n        }\n\n        return false;\n    }\n\n    return true;\n});\n\nconfig.addValidatorToMap(OP_ANY_ONE_MATCH, (left, right, options, context) => {\n    if (!Array.isArray(left)) {\n        throw new Error(MSG.VALUE_NOT_ARRAY(ops.ANY_ONE_MATCH));\n    }\n\n    let found = left.find((leftItem) => {\n        const reason = validate(leftItem, right, { ...options, abortEarly: false, throwError: false }, context);\n        return reason === true;\n    });\n\n    if (!found) {\n        context.$$ERROR = MSG.validationErrors[ops.ANY_ONE_MATCH](context.name, left, right, context);\n    }\n\n    return found ? true : false;\n});\n\nconfig.addValidatorToMap(OP_TYPE, (left, right, options, context) => {\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.TYPE));\n    }\n\n    if (!Primitives.has(right)) {\n        throw new Error(MSG.UNSUPPORTED_TYPE(right));\n    }\n\n    return Types[right].validate(left);\n});\n\nconfig.addValidatorToMap(OP_HAS_KEYS, (left, right) => {\n    if (typeof left !== 'object') {\n        return false;\n    }\n\n    return Array.isArray(right) ? right.every((key) => _has(left, key)) : _has(left, right);\n});\n\nconfig.addValidatorToMap(OP_START_WITH, (left, right, options, context) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n\n    right = processRightValue(right, context);\n\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.START_WITH));\n    }\n\n    return left.startsWith(right);\n});\n\nconfig.addValidatorToMap(OP_END_WITH, (left, right, options, context) => {\n    if (typeof left !== 'string') {\n        return false;\n    }\n\n    right = processRightValue(right, context);\n\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.END_WITH));\n    }\n\n    return left.endsWith(right);\n});\n\nconfig.addValidatorToMap(OP_SAME_AS, (left, right, options, context) => {\n    if (typeof left === 'object') {\n        throw new Error(MSG.VALUE_NOT_PRIMITIVE(ops.OP_SAME_AS));\n    }\n    if (typeof right !== 'string') {\n        throw new Error(MSG.OPERAND_NOT_STRING(ops.OP_SAME_AS));\n    }\n\n    return left === _get(context.$$PARENT, right);\n});\n\nexport default validate;\n"],"names":["MSG","config","messages","evaluateWithContext","value","context","type","startsWith","pos","indexOf","contextVarKeys","has","Error","SYNTAX_INVALID_CONTEXT","key","substring","_get","Array","isArray","map","item","_mapValues","processRightValue","right","jsonx","isPlainObject","undefined","OP_EQUAL","ops","EQUAL","OP_NOT_EQUAL","NOT_EQUAL","OP_NOT","NOT","OP_GREATER_THAN","GREATER_THAN","OP_GREATER_THAN_OR_EQUAL","GREATER_THAN_OR_EQUAL","OP_LESS_THAN","LESS_THAN","OP_LESS_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","OP_LENGTH","LENGTH","OP_IN","IN","OP_NOT_IN","NOT_IN","OP_EXISTS","EXISTS","OP_REQUIRED","REQUIRED","OP_MATCH","MATCH","OP_MATCH_ANY","MATCH_ANY","OP_ALL_MATCH","ALL_MATCH","OP_ANY_ONE_MATCH","ANY_ONE_MATCH","OP_TYPE","TYPE","OP_HAS_KEYS","HAS_KEYS","OP_START_WITH","START_WITH","OP_END_WITH","END_WITH","OP_SAME_AS","SAME_AS","addValidatorToMap","left","options","_isEqual","args","test","_size","OPERAND_NOT_ARRAY","equal","getValidator","find","element","notEqual","every","OPERAND_NOT_BOOL","errors","rule","reason","validate","asPredicate","push","_castArray","abortEarly","length","throwError","JsvError","path","$$ERROR","plainError","reason2","found","validationErrors","name","VALUE_NOT_ARRAY","leftItem","OPERAND_NOT_STRING","Primitives","UNSUPPORTED_TYPE","Types","_has","endsWith","VALUE_NOT_PRIMITIVE","$$PARENT"],"mappings":"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"}