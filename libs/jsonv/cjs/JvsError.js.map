{"version":3,"sources":["../lib/JvsError.js"],"sourcesContent":["import _castArray from 'lodash/castArray';\nimport { messages } from './config';\n\nclass JsvError extends Error {\n    constructor(errorOrErrors, value, field) {\n        const errors = [];\n        let inner = [];\n\n        _castArray(errorOrErrors).forEach((err) => {\n            if (err.name === 'JsvError') {\n                errors.push(...err.errors);\n                inner = [...inner, ...(err.inner.length > 0 ? err.inner : [err])];\n            } else {\n                errors.push(err);\n                if (err.inner && Array.isArray(err.inner)) {\n                    inner = [...inner, ...err.inner];\n                }\n            }\n        });\n\n        super(errors.length > 1 ? messages.MULTI_ERRORS(errors.length) : errors[0]);\n\n        this.name = 'JsvError';\n        this.value = value;\n        this.path = field;\n        this.errors = errors;\n        this.inner = inner;\n    }\n}\n\nexport default JsvError;"],"names":["JsvError","Error","constructor","errorOrErrors","value","field","errors","inner","_castArray","forEach","err","name","push","length","Array","isArray","messages","MULTI_ERRORS","path"],"mappings":"oGA8BA,iDAAA,8DA9BuB,2CACE,gGAEzB,MAAMA,iBAAiBC,MACnBC,YAAYC,aAAa,CAAEC,KAAK,CAAEC,KAAK,CAAE,CACrC,MAAMC,OAAS,EAAE,CACjB,IAAIC,MAAQ,EAAE,CAEdC,GAAAA,kBAAU,EAACL,eAAeM,OAAO,CAAC,AAACC,KAAQ,CACvC,GAAIA,IAAIC,IAAI,GAAK,WAAY,CACzBL,OAAOM,IAAI,IAAIF,IAAIJ,MAAM,EACzBC,MAAQ,IAAIA,SAAWG,IAAIH,KAAK,CAACM,MAAM,CAAG,EAAIH,IAAIH,KAAK,CAAG,CAACG,IAAI,CAAE,AACrE,KAAO,CACHJ,OAAOM,IAAI,CAACF,KACZ,GAAIA,IAAIH,KAAK,EAAIO,MAAMC,OAAO,CAACL,IAAIH,KAAK,EAAG,CACvCA,MAAQ,IAAIA,SAAUG,IAAIH,KAAK,CAAC,AACpC,CAAC,AACL,CAAC,AACL,GAEA,KAAK,CAACD,OAAOO,MAAM,CAAG,EAAIG,gBAAQ,CAACC,YAAY,CAACX,OAAOO,MAAM,EAAIP,MAAM,CAAC,EAAE,CAE1E,CAAA,IAAI,CAACK,IAAI,CAAG,UACZ,CAAA,IAAI,CAACP,KAAK,CAAGA,KACb,CAAA,IAAI,CAACc,IAAI,CAAGb,KACZ,CAAA,IAAI,CAACC,MAAM,CAAGA,MACd,CAAA,IAAI,CAACC,KAAK,CAAGA,KACjB,CACJ,OAEA,SAAeP"}