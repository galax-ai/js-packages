{"version":3,"sources":["../lib/Jvs.js"],"sourcesContent":["import config from './config';\nimport validate from './validators';\n\n/**\n * JSON Validation Syntax \n * @class\n */\nclass Jvs {\n    static config = config;\n    static match = (value, jvs, options, context) => {\n        const reason = validate(value, jvs, {\n            throwError: false,\n            abortEarly: true,\n            plainError: true,\n            ...options\n        }, context);\n        if (reason === true) {\n            return [true];\n        }\n\n        return [false, reason];\n    };\n\n    /**\n     * @param {object} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n\n    /**\n     * Match the value with expected conditions in JSON expression\n     * @param {object} expected - JSON match expression\n     * @throws ValidationError\n     * @returns {Jvs}\n     */\n    match(expected) {\n        validate(this.value, expected);\n        return this;\n    }\n}\n\nexport default Jvs;\n"],"names":["Jvs","match","expected","validate","value","constructor","config","jvs","options","context","reason","throwError","abortEarly","plainError"],"mappings":";;;;+BA0CA;;;eAAA;;;+DA1CmB;mEACE;;;;;;;;;;;;;;;;;;;AAErB;;;CAGC,GACD,MAAMA;IAuBF;;;;;KAKC,GACDC,MAAMC,QAAQ,EAAE;QACZC,IAAAA,mBAAQ,EAAC,IAAI,CAACC,KAAK,EAAEF;QACrB,OAAO,IAAI;IACf;IAhBA;;KAEC,GACDG,YAAYD,KAAK,CAAE;QACf,IAAI,CAACA,KAAK,GAAGA;IACjB;AAYJ;AAhCI,iBADEJ,KACKM,UAASA,eAAM;AACtB,iBAFEN,KAEKC,SAAQ,CAACG,OAAOG,KAAKC,SAASC,UAAY;IAC7C,MAAMC,SAASP,IAAAA,mBAAQ,EAACC,OAAOG,KAAK;QAChCI,YAAY,KAAK;QACjBC,YAAY,IAAI;QAChBC,YAAY,IAAI;QAChB,GAAGL,OAAO;IACd,GAAGC;IACH,IAAIC,WAAW,IAAI,EAAE;QACjB,OAAO;YAAC,IAAI;SAAC;IACjB,CAAC;IAED,OAAO;QAAC,KAAK;QAAEA;KAAO;AAC1B;MAqBJ,WAAeV"}