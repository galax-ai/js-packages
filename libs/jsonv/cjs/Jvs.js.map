{"version":3,"sources":["../lib/Jvs.js"],"sourcesContent":["import config from './config';\nimport validate from './validators';\n\n/**\n * JSON Validation Syntax \n * @class\n */\nclass Jvs {\n    static config = config;\n    static match = (value, jvs, options, context) => {\n        const reason = validate(value, jvs, {\n            throwError: false,\n            abortEarly: true,\n            plainError: true,\n            ...options\n        }, context);\n        if (reason === true) {\n            return [true];\n        }\n\n        return [false, reason];\n    };\n\n    /**\n     * @param {object} value\n     */\n    constructor(value) {\n        this.value = value;\n    }\n\n    /**\n     * Match the value with expected conditions in JSON expression\n     * @param {object} expected - JSON match expression\n     * @throws ValidationError\n     * @returns {Jvs}\n     */\n    match(expected) {\n        validate(this.value, expected);\n        return this;\n    }\n}\n\nexport default Jvs;\n"],"names":["Jvs","match","expected","validate","value","constructor","config","jvs","options","context","reason","throwError","abortEarly","plainError"],"mappings":"oGA0CA,iDAAA,2DA1CmB,gEACE,yRAMrB,MAAMA,IA6BFC,MAAMC,QAAQ,CAAE,CACZC,GAAAA,mBAAQ,EAAC,IAAI,CAACC,KAAK,CAAEF,UACrB,OAAO,IAAI,AACf,CAbAG,YAAYD,KAAK,CAAE,CACf,IAAI,CAACA,KAAK,CAAGA,KACjB,CAYJ,CAhCI,iBADEJ,IACKM,SAASA,eAAM,EACtB,iBAFEN,IAEKC,QAAQ,CAACG,MAAOG,IAAKC,QAASC,UAAY,CAC7C,MAAMC,OAASP,GAAAA,mBAAQ,EAACC,MAAOG,IAAK,CAChCI,WAAY,KAAK,CACjBC,WAAY,IAAI,CAChBC,WAAY,IAAI,CAChB,GAAGL,OAAO,AACd,EAAGC,SACH,GAAIC,SAAW,IAAI,CAAE,CACjB,MAAO,CAAC,IAAI,CAAC,AACjB,CAAC,AAED,MAAO,CAAC,KAAK,CAAEA,OAAO,AAC1B,SAqBJ,SAAeV"}