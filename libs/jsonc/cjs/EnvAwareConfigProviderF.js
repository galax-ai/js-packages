"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _nodepath=_interop_require_default(require("node:path"));const _lodash=_interop_require_default(require("lodash"));function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}function defaultOverrider(defConfig,envConfig){return{...defConfig,...envConfig}}const EnvAwareConfigProviderF=(EXT,PROVIDER,DEFAULT_FLAG="default")=>{class _class{async load_(logger,noThrow){const defConfig=await this._defConfigProvider.load_(logger,noThrow);const envConfig=await this._envConfigProvider.load_(logger,true);this.config=this._overrider(defConfig,envConfig);if(logger&&!_lodash.default.isEmpty(envConfig)){logger.log("info",`Configuration is overrided by environment-specific [env=${this._envFlag}] settings.`)}return this.config}async save_(){await this._envConfigProvider.save_()}setItem(key,value){_lodash.default.set(this.config,key,value);this._envConfigProvider.setItem(key,value);return this}getItem(key,defaultValue){return _lodash.default.get(this.config,key,defaultValue)}constructor(configDir,baseName,envFlag="development",overrider){this._defConfigProvider=new PROVIDER(_nodepath.default.join(configDir,baseName+"."+DEFAULT_FLAG+EXT));this._envConfigProvider=new PROVIDER(_nodepath.default.join(configDir,baseName+"."+envFlag+EXT));this._envFlag=envFlag;this._overrider=overrider||defaultOverrider;this.config=undefined}}return _class};const _default=EnvAwareConfigProviderF;
//# sourceMappingURL=EnvAwareConfigProviderF.js.map