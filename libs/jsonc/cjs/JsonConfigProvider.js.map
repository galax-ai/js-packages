{"version":3,"sources":["../lib/JsonConfigProvider.js"],"sourcesContent":["import _ from 'lodash';\nimport { readFile, writeFile } from 'node:fs/promises';\n\nclass JsonConfigProvider {\n    /**\n     * JSON file config data source\n     * @constructs JsonConfigProvider\n     * @param {string} filePath - The path of config file\n     */\n    constructor(filePath) {\n        this.filePath = filePath;\n\n        /**\n         * The loaded config\n         * @type {object}\n         * @public\n         */\n        this.config = undefined;\n    }\n\n    /**\n     * Start loading the config files\n     * @returns {Promise.<object>}\n     */\n    async load_(logger, noThrow) {\n        try {\n            this.config = JSON.parse(await readFile(this.filePath, 'utf-8'));            \n        } catch (error) {\n            if (noThrow) {\n                return undefined;\n            }\n\n            throw error;\n        }\n\n        logger?.log(\n            'info',\n            `Configuration is loaded from \"${this.filePath}\"`\n        );\n\n        return this.config;\n    }\n\n    /**\n     * Start saving the config to files\n     * @returns {Promise.<*>}\n     */\n    async save_() {\n        await writeFile(this.filePath, JSON.stringify(this.config ?? {}, null, 4), 'utf-8');\n    }\n\n    /**\n     * Update config item by dotted path.\n     * @param {string} key - The path of config item, e.g. \"item.subItem.key\" refers to { item: { subItem: { key: \"*\" } } }\n     * @param {*} value - New value of config item\n     * @returns {JsonConfigProvider}\n     */\n    setItem(key, value) {\n        _.set(this.config, key, value);\n        return this;\n    }\n\n    /**\n     * Get config item by dotted path.\n     * @param {string} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getItem(key, defaultValue) {\n        return _.get(this.config, key, defaultValue);\n    }\n}\n\nexport default JsonConfigProvider;\n"],"names":["JsonConfigProvider","load_","logger","noThrow","config","JSON","parse","readFile","filePath","error","undefined","log","save_","writeFile","stringify","setItem","key","value","_","set","getItem","defaultValue","get","constructor"],"mappings":"oGAyEA,iDAAA,2DAzEc,mCACsB,wGAEpC,MAAMA,mBAqBF,MAAMC,MAAMC,MAAM,CAAEC,OAAO,CAAE,CACzB,GAAI,CACA,IAAI,CAACC,MAAM,CAAGC,KAAKC,KAAK,CAAC,MAAMC,GAAAA,kBAAQ,EAAC,IAAI,CAACC,QAAQ,CAAE,SAC3D,CAAE,MAAOC,MAAO,CACZ,GAAIN,QAAS,CACT,OAAOO,SACX,CAAC,AAED,MAAMD,KAAM,AAChB,CAEAP,QAAQS,IACJ,OACA,CAAC,8BAA8B,EAAE,IAAI,CAACH,QAAQ,CAAC,CAAC,CAAC,EAGrD,OAAO,IAAI,CAACJ,MAAM,AACtB,CAMA,MAAMQ,OAAQ,CACV,MAAMC,GAAAA,mBAAS,EAAC,IAAI,CAACL,QAAQ,CAAEH,KAAKS,SAAS,CAAC,IAAI,CAACV,MAAM,EAAI,CAAC,EAAG,IAAI,CAAE,GAAI,QAC/E,CAQAW,QAAQC,GAAG,CAAEC,KAAK,CAAE,CAChBC,eAAC,CAACC,GAAG,CAAC,IAAI,CAACf,MAAM,CAAEY,IAAKC,OACxB,OAAO,IAAI,AACf,CAQAG,QAAQJ,GAAG,CAAEK,YAAY,CAAE,CACvB,OAAOH,eAAC,CAACI,GAAG,CAAC,IAAI,CAAClB,MAAM,CAAEY,IAAKK,aACnC,CA7DAE,YAAYf,QAAQ,CAAE,CAClB,IAAI,CAACA,QAAQ,CAAGA,QAOhB,CAAA,IAAI,CAACJ,MAAM,CAAGM,SAClB,CAqDJ,OAEA,SAAeV"}