{"version":3,"sources":["../lib/JsonConfigProvider.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'node:path';\nimport { readFile, writeFile } from 'node:fs/promises';\n\nclass JsonConfigProvider {\n    /**\n     * JSON file config data source\n     * @constructs JsonConfigProvider\n     * @param {string} filePath - The path of config file\n     */\n    constructor(filePath) {\n        this.filePath = filePath;\n\n        /**\n         * The loaded config\n         * @type {object}\n         * @public\n         */\n        this.config = undefined;\n    }\n\n    /**\n     * Start loading the config files\n     * @returns {Promise.<object>}\n     */\n    async load_(logger, noThrow) {\n        try {\n            this.config = JSON.parse(await readFile(this.filePath, 'utf-8'));\n        } catch (error) {\n            if (noThrow) {\n                return undefined;\n            }\n\n            throw error;\n        }\n\n        logger?.log('info', `Configuration is loaded from \"${path.relative(process.cwd(), this.filePath)}\"`);\n\n        return this.config;\n    }\n\n    /**\n     * Start saving the config to files\n     * @returns {Promise.<*>}\n     */\n    async save_() {\n        await writeFile(this.filePath, JSON.stringify(this.config ?? {}, null, 4), 'utf-8');\n    }\n\n    /**\n     * Update config item by dotted path.\n     * @param {string} key - The path of config item, e.g. \"item.subItem.key\" refers to { item: { subItem: { key: \"*\" } } }\n     * @param {*} value - New value of config item\n     * @returns {JsonConfigProvider}\n     */\n    setItem(key, value) {\n        _.set(this.config, key, value);\n        return this;\n    }\n\n    /**\n     * Get config item by dotted path.\n     * @param {string} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getItem(key, defaultValue) {\n        return _.get(this.config, key, defaultValue);\n    }\n}\n\nexport default JsonConfigProvider;\n"],"names":["JsonConfigProvider","load_","logger","noThrow","config","JSON","parse","readFile","filePath","error","undefined","log","path","relative","process","cwd","save_","writeFile","stringify","setItem","key","value","_","set","getItem","defaultValue","get","constructor"],"mappings":";;;;+BAuEA;;;eAAA;;;+DAvEc;iEACG;0BACmB;;;;;;AAEpC,MAAMA;IAiBF;;;KAGC,GACD,MAAMC,MAAMC,MAAM,EAAEC,OAAO,EAAE;QACzB,IAAI;YACA,IAAI,CAACC,MAAM,GAAGC,KAAKC,KAAK,CAAC,MAAMC,IAAAA,kBAAQ,EAAC,IAAI,CAACC,QAAQ,EAAE;QAC3D,EAAE,OAAOC,OAAO;YACZ,IAAIN,SAAS;gBACT,OAAOO;YACX,CAAC;YAED,MAAMD,MAAM;QAChB;QAEAP,QAAQS,IAAI,QAAQ,CAAC,8BAA8B,EAAEC,iBAAI,CAACC,QAAQ,CAACC,QAAQC,GAAG,IAAI,IAAI,CAACP,QAAQ,EAAE,CAAC,CAAC;QAEnG,OAAO,IAAI,CAACJ,MAAM;IACtB;IAEA;;;KAGC,GACD,MAAMY,QAAQ;QACV,MAAMC,IAAAA,mBAAS,EAAC,IAAI,CAACT,QAAQ,EAAEH,KAAKa,SAAS,CAAC,IAAI,CAACd,MAAM,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI;IAC/E;IAEA;;;;;KAKC,GACDe,QAAQC,GAAG,EAAEC,KAAK,EAAE;QAChBC,eAAC,CAACC,GAAG,CAAC,IAAI,CAACnB,MAAM,EAAEgB,KAAKC;QACxB,OAAO,IAAI;IACf;IAEA;;;;;KAKC,GACDG,QAAQJ,GAAG,EAAEK,YAAY,EAAE;QACvB,OAAOH,eAAC,CAACI,GAAG,CAAC,IAAI,CAACtB,MAAM,EAAEgB,KAAKK;IACnC;IA/DA;;;;KAIC,GACDE,YAAYnB,QAAQ,CAAE;QAClB,IAAI,CAACA,QAAQ,GAAGA;QAEhB;;;;SAIC,GACD,IAAI,CAACJ,MAAM,GAAGM;IAClB;AAkDJ;MAEA,WAAeV"}