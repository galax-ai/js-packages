{"version":3,"sources":["../lib/object.js"],"sourcesContent":["import _each from 'lodash/each';\nimport { ValidationError } from './errors';\nimport { makePath } from '@galaxar/utils/objectPathUtils';\nimport isPlainObject from '@galaxar/utils/isPlainObject';\nimport batchAsync_ from '@galaxar/utils/batchAsync_';\n\nconst jsonStarter = new Set(['\"', '[', '{']);\nconst jsonEnding = {\n    '\"': '\"',\n    '[': ']',\n    '{': '}',\n};\n\nclass T_OBJECT {\n    name = 'object';\n    alias = ['json'];\n    primitive = true;\n    defaultValue = {};\n\n    constructor(system) {\n        this.system = system;\n    }\n\n    validate(value) {\n        return isPlainObject(value);\n    }\n\n    _sanitize(value, meta, opts) {\n        const type = typeof value;\n\n        if (type === 'string') {\n            if (value.length > 1 && jsonStarter.has(value[0]) && jsonEnding[value[0]] === value[value.length - 1]) {\n                value = JSON.parse(value);\n            }\n        }\n\n        if (meta.schema) {\n            if (typeof value !== 'object') {\n                throw new ValidationError('Invalid object value.', {\n                    value,\n                    meta,\n                    ...opts\n                });\n            }\n\n            const schema = typeof meta.schema === 'function' ? meta.schema() : meta.schema;\n            const newValue = {};\n            _each(schema, (validationObject, fieldName) => {\n                const fieldValue = value[fieldName];\n\n                const _fieldValue = this.system.sanitize(fieldValue, validationObject, opts.i18n, makePath(opts.path, fieldName));\n                if (_fieldValue != null || fieldName in value) {\n                    newValue[fieldName] = _fieldValue;\n                }\n            });\n\n            if (meta.keepUnsanitized) {\n                return { ...value, ...newValue };\n            }\n\n            return newValue;\n        }\n\n        return value;\n    }\n\n    async _sanitizeAsync(value, meta, opts) {\n        const type = typeof value;\n\n        if (type === 'string') {\n            if (value.length > 1 && jsonStarter.has(value[0]) && jsonEnding[value[0]] === value[value.length - 1]) {\n                value = JSON.parse(value);\n            }\n        }\n\n        if (meta.schema) {\n            if (typeof value !== 'object') {\n                throw new ValidationError('Invalid object value.', {\n                    value,\n                    meta,\n                    ...opts\n                });\n            }\n\n            const schema = typeof meta.schema === 'function' ? meta.schema() : meta.schema;\n            const newValue = {};\n            await batchAsync_(schema, async (validationObject, fieldName) => {\n                const fieldValue = value[fieldName];\n\n                const _fieldValue = await this.system.sanitize_(fieldValue, validationObject, opts.i18n, makePath(opts.path, fieldName));\n                if (_fieldValue != null || fieldName in value) {\n                    newValue[fieldName] = _fieldValue;\n                }\n            });\n\n            if (meta.keepUnsanitized) {\n                return { ...value, ...newValue };\n            }\n\n            return newValue;\n        }\n\n        return value;\n    }\n\n    serialize(value) {\n        if (value == null) return null;\n        return this.system.safeJsonStringify(value);\n    }\n};\n\nexport default T_OBJECT;\n"],"names":["jsonStarter","Set","jsonEnding","T_OBJECT","validate","value","isPlainObject","_sanitize","meta","opts","type","length","has","JSON","parse","schema","ValidationError","newValue","_each","validationObject","fieldName","fieldValue","_fieldValue","system","sanitize","i18n","makePath","path","keepUnsanitized","_sanitizeAsync","batchAsync_","sanitize_","serialize","safeJsonStringify","constructor","name","alias","primitive","defaultValue"],"mappings":"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"}