{"version":3,"sources":["../lib/bigint.js"],"sourcesContent":["import { ValidationError } from './errors';\n\nclass T_BIGINT {\n    name = 'bigint';\n    alias = ['biginteger'];\n    primitive = true;\n    scalar = true;\n    defaultValue = 0n;\n\n    constructor(system) {\n        this.system = system;\n    }\n\n    validate(value) {\n        return typeof value === 'bigint';\n    }\n\n    _sanitize(value, meta, opts) {\n        try {\n            value = BigInt(value);\n        } catch (e) {\n            throw new ValidationError(\n                'Invalid bigint value.',\n                {\n                    value,\n                    meta,\n                    ...opts,\n                },\n                e\n            );\n        }\n\n        return value;\n    }\n\n    serialize(value) {\n        return value == null\n            ? null\n            : this.system.plugins.bigintWriter\n            ? this.system.plugins.bigintWriter(value)\n            : value.toString();\n    }\n}\n\nexport default T_BIGINT;\n"],"names":["T_BIGINT","validate","value","_sanitize","meta","opts","BigInt","e","ValidationError","serialize","system","plugins","bigintWriter","toString","constructor","name","alias","primitive","scalar","defaultValue"],"mappings":";;;;+BA4CA;;;eAAA;;;wBA5CgC;;;;;;;;;;;;;;AAEhC,MAAMA;IAWFC,SAASC,KAAK,EAAE;QACZ,OAAO,OAAOA,UAAU;IAC5B;IAEAC,UAAUD,KAAK,EAAEE,IAAI,EAAEC,IAAI,EAAE;QACzB,IAAI;YACAH,QAAQI,OAAOJ;QACnB,EAAE,OAAOK,GAAG;YACR,MAAM,IAAIC,uBAAe,CACrB,yBACA;gBACIN;gBACAE;gBACA,GAAGC,IAAI;YACX,GACAE,GACF;QACN;QAEA,OAAOL;IACX;IAEAO,UAAUP,KAAK,EAAE;QACb,OAAOA,SAAS,IAAI,GACd,IAAI,GACJ,IAAI,CAACQ,MAAM,CAACC,OAAO,CAACC,YAAY,GAChC,IAAI,CAACF,MAAM,CAACC,OAAO,CAACC,YAAY,CAACV,SACjCA,MAAMW,QAAQ,EAAE;IAC1B;IAhCAC,YAAYJ,MAAM,CAAE;QANpBK,uBAAAA,QAAO;QACPC,uBAAAA,SAAQ;YAAC;SAAa;QACtBC,uBAAAA,aAAY,IAAI;QAChBC,uBAAAA,UAAS,IAAI;QACbC,uBAAAA,gBAAe,EAAE;QAGb,IAAI,CAACT,MAAM,GAAGA;IAClB;AA+BJ;MAEA,WAAeV"}