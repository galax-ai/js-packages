{"version":3,"sources":["../../lib/errors/DataErrors.js"],"sourcesContent":["import { ExposableError, ApplicationError } from './AppErrors';\nimport HttpCode from './HttpCode';\n\n/**\n * Data errors.\n * @module DataErrors\n */\n\n/**\n * Validation error.\n * @class\n */\nexport class ValidationError extends ExposableError {\n    static formatError(error) {\n        let fullMessage = error.message;\n        if (error.info.error) {\n            fullMessage += ' ' + error.info.error;\n        }\n\n        if (error.info.errors) {\n            fullMessage += '\\nAll of these alternative validations failed:\\n' + error.info.errors.map((_error, i) => `Option ${i+1} field \"${_error.info.path}\": ${_error.message}`).join('\\n');\n        }\n\n        return fullMessage;\n    }\n\n    static extractFromError(error) {\n        const _error = {\n            message: error.message,\n            info: error.info\n        };\n\n        if (error.inner) {\n            _error.inner = ValidationError.extractFromError(error.inner);\n        }\n\n        return _error;\n    }\n\n    constructor(message, info, inner) {\n        super(message, info, HttpCode.BAD_REQUEST, 'E_INVALID_DATA');\n\n        this.inner = inner;\n    }\n}\n\n/**\n * Referenced entity not found.\n * @class\n */\nexport class ReferencedNotExist extends ExposableError {\n    constructor(message, info) {\n        super(message, info, HttpCode.BAD_REQUEST, 'E_REFERENCED_NOT_EXIST');\n    }\n}\n\n/**\n * Duplicate error.\n * @class\n */\nexport class DuplicateError extends ExposableError {\n    constructor(message, info) {\n        super(message, info, HttpCode.BAD_REQUEST, 'E_DUPLICATE');\n    }\n}\n\n/**\n * Unexpected data/state error.\n * @class\n */\nexport class UnexpectedState extends ApplicationError {\n    constructor(message, info) {\n        super(message, info, 'E_UNEXPECTED');\n    }\n}\n\n/**\n * Database operation error.\n * @class\n */\nexport class DatabaseError extends ApplicationError {\n    constructor(message, info) {\n        super(message, info, 'E_DATABASE');\n    }\n}\n"],"names":["ValidationError","ReferencedNotExist","DuplicateError","UnexpectedState","DatabaseError","ExposableError","formatError","error","fullMessage","message","info","errors","map","_error","i","path","join","extractFromError","inner","constructor","HttpCode","BAD_REQUEST","ApplicationError"],"mappings":";;;;;;;;;;;IAYaA,eAAe;eAAfA;;IAsCAC,kBAAkB;eAAlBA;;IAUAC,cAAc;eAAdA;;IAUAC,eAAe;eAAfA;;IAUAC,aAAa;eAAbA;;;2BAhFoC;iEAC5B;;;;;;AAWd,MAAMJ,wBAAwBK,yBAAc;IAC/C,OAAOC,YAAYC,KAAK,EAAE;QACtB,IAAIC,cAAcD,MAAME,OAAO;QAC/B,IAAIF,MAAMG,IAAI,CAACH,KAAK,EAAE;YAClBC,eAAe,MAAMD,MAAMG,IAAI,CAACH,KAAK;QACzC,CAAC;QAED,IAAIA,MAAMG,IAAI,CAACC,MAAM,EAAE;YACnBH,eAAe,qDAAqDD,MAAMG,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,QAAQC,IAAM,CAAC,OAAO,EAAEA,IAAE,EAAE,QAAQ,EAAED,OAAOH,IAAI,CAACK,IAAI,CAAC,GAAG,EAAEF,OAAOJ,OAAO,CAAC,CAAC,EAAEO,IAAI,CAAC;QAClL,CAAC;QAED,OAAOR;IACX;IAEA,OAAOS,iBAAiBV,KAAK,EAAE;QAC3B,MAAMM,SAAS;YACXJ,SAASF,MAAME,OAAO;YACtBC,MAAMH,MAAMG,IAAI;QACpB;QAEA,IAAIH,MAAMW,KAAK,EAAE;YACbL,OAAOK,KAAK,GAAGlB,gBAAgBiB,gBAAgB,CAACV,MAAMW,KAAK;QAC/D,CAAC;QAED,OAAOL;IACX;IAEAM,YAAYV,OAAO,EAAEC,IAAI,EAAEQ,KAAK,CAAE;QAC9B,KAAK,CAACT,SAASC,MAAMU,iBAAQ,CAACC,WAAW,EAAE;QAE3C,IAAI,CAACH,KAAK,GAAGA;IACjB;AACJ;AAMO,MAAMjB,2BAA2BI,yBAAc;IAClDc,YAAYV,OAAO,EAAEC,IAAI,CAAE;QACvB,KAAK,CAACD,SAASC,MAAMU,iBAAQ,CAACC,WAAW,EAAE;IAC/C;AACJ;AAMO,MAAMnB,uBAAuBG,yBAAc;IAC9Cc,YAAYV,OAAO,EAAEC,IAAI,CAAE;QACvB,KAAK,CAACD,SAASC,MAAMU,iBAAQ,CAACC,WAAW,EAAE;IAC/C;AACJ;AAMO,MAAMlB,wBAAwBmB,2BAAgB;IACjDH,YAAYV,OAAO,EAAEC,IAAI,CAAE;QACvB,KAAK,CAACD,SAASC,MAAM;IACzB;AACJ;AAMO,MAAMN,sBAAsBkB,2BAAgB;IAC/CH,YAAYV,OAAO,EAAEC,IAAI,CAAE;QACvB,KAAK,CAACD,SAASC,MAAM;IACzB;AACJ"}