{"version":3,"sources":["../lib/types.js"],"sourcesContent":["import { InvalidArgument, ValidationError } from './errors';\n\nexport const Types = {};\nexport const Primitives = new Set();\nexport const Plugins = {};\n\nfunction _addType(name, typeMeta) {\n    if (name in Types) {\n        throw new Error(`Type \"${name}\" already exist.`);\n    }\n\n    Types[name] = typeMeta;\n    Primitives.add(name);\n}\n\nexport const addType = (name, typeMeta) => {\n    _addType(name, typeMeta);\n    _addType(typeMeta.name, typeMeta);\n\n    typeMeta.alias?.forEach((a) => {\n        _addType(a, typeMeta);\n    });\n};\n\nexport const addPlugin = (name, plugin) => {\n    Plugins[name] = plugin;\n};\n\nexport const callType = (method) => (value, typeInfo, i18n, fieldPath) => {\n    if (!Primitives.has(typeInfo.type)) {\n        throw new InvalidArgument(`Unsuppported primitive type: \"${typeInfo.type}\".`);\n    }\n\n    const typeObject = Types[typeInfo.type];\n    return typeObject[method](value, typeInfo, i18n, fieldPath);\n};\n\nexport const sanitize = callType('sanitize');\nexport const serialize = callType('serialize');\n\nexport const safeJsonStringify = (value) => {\n    const bigintWriter = Plugins['bigintWriter'];\n    if (bigintWriter) {\n        const replacer = (_, value) => (typeof value === 'bigint' ? bigintWriter(value) : value);\n\n        return JSON.stringify(value, replacer);\n    }\n\n    return JSON.stringify(value);\n};\n\nexport const getStringifier = () => {\n    const bigintWriter = Plugins['bigintWriter'];\n    if (bigintWriter) {\n        return (value) => (typeof value === 'bigint' ? bigintWriter(value) : value.toString());\n    }\n\n    return null;\n};\n\nexport const beginSanitize = (value, meta, i18n, path) => {\n    if (value == null) {\n        if (meta.default != null) {\n            return [true, meta.default];\n        } else if (meta.optional) {\n            return [true, null];\n        }\n\n        throw new ValidationError('Value ' + (path ? `of \"${path}\" ` : '') + 'is required.', {\n            value,\n            meta,\n            i18n,\n            path,\n        });\n    }\n\n    if (meta.rawValue) return [true, value];\n\n    return [false];\n};\n\n// compatibility\nTypes.sanitize = sanitize;\nTypes.serialize = serialize;\nTypes.primitives = Primitives;\n"],"names":["Types","Primitives","Plugins","addType","addPlugin","callType","sanitize","serialize","safeJsonStringify","getStringifier","beginSanitize","Set","_addType","name","typeMeta","Error","add","alias","forEach","a","plugin","method","value","typeInfo","i18n","fieldPath","has","type","InvalidArgument","typeObject","bigintWriter","replacer","_","JSON","stringify","toString","meta","path","default","optional","ValidationError","rawValue","primitives"],"mappings":"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"}