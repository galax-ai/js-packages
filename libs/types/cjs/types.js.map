{"version":3,"sources":["../types.js"],"sourcesContent":["import { InvalidArgument, ValidationError } from './errors';\n\nexport const Types = {};\nexport const Primitives = new Set();\nexport const Plugins = {};\n\nfunction _addType(name, typeMeta) {\n    if (name in Types) {\n        throw new Error(`Type \"${name}\" already exist.`);\n    }\n\n    Types[name] = typeMeta;\n    Primitives.add(name);\n}\n\nexport const addType = (name, typeMeta) => {\n    _addType(name, typeMeta);\n    _addType(typeMeta.name, typeMeta);\n\n    typeMeta.alias?.forEach((a) => {\n        _addType(a, typeMeta);\n    });\n};\n\nexport const addPlugin = (name, plugin) => {\n    Plugins[name] = plugin;\n};\n\nexport const callType = (method) => (value, typeInfo, i18n, fieldPath) => {\n    if (!Primitives.has(typeInfo.type)) {\n        throw new InvalidArgument(`Unsuppported primitive type: \"${typeInfo.type}\".`);\n    }\n\n    const typeObject = Types[typeInfo.type];\n    return typeObject[method](value, typeInfo, i18n, fieldPath);\n};\n\nexport const sanitize = callType('sanitize');\nexport const serialize = callType('serialize');\n\nexport const safeJsonStringify = (value) => {\n    const bigintWriter = Plugins['bigintWriter'];\n    if (bigintWriter) {\n        const replacer = (_, value) => (typeof value === 'bigint' ? bigintWriter(value) : value);\n\n        return JSON.stringify(value, replacer);\n    }\n\n    return JSON.stringify(value);\n};\n\nexport const getStringifier = () => {\n    const bigintWriter = Plugins['bigintWriter'];\n    if (bigintWriter) {\n        return (value) => (typeof value === 'bigint' ? bigintWriter(value) : value.toString());\n    }\n\n    return null;\n};\n\nexport const beginSanitize = (value, meta, i18n, path) => {\n    if (value == null) {\n        if (meta.default != null) {\n            return [true, meta.default];\n        } else if (meta.optional) {\n            return [true, null];\n        }\n\n        throw new ValidationError('Value ' + (path ? `of \"${path}\" ` : '') + 'is required.', {\n            value,\n            meta,\n            i18n,\n            path,\n        });\n    }\n\n    if (meta.rawValue) return [true, value];\n\n    return [false];\n};\n\n// compatibility\nTypes.sanitize = sanitize;\nTypes.serialize = serialize;\nTypes.primitives = Primitives;\n"],"names":["Types","Primitives","Plugins","addType","addPlugin","callType","sanitize","serialize","safeJsonStringify","getStringifier","beginSanitize","Set","_addType","name","typeMeta","Error","add","alias","forEach","a","plugin","method","value","typeInfo","i18n","fieldPath","has","type","InvalidArgument","typeObject","bigintWriter","replacer","_","JSON","stringify","toString","meta","path","default","optional","ValidationError","rawValue","primitives"],"mappings":"2MAEaA,KAAK,mBAALA,OACAC,UAAU,mBAAVA,YACAC,OAAO,mBAAPA,SAWAC,OAAO,mBAAPA,SASAC,SAAS,mBAATA,WAIAC,QAAQ,mBAARA,UASAC,QAAQ,mBAARA,UACAC,SAAS,mBAATA,WAEAC,iBAAiB,mBAAjBA,mBAWAC,cAAc,mBAAdA,gBASAC,aAAa,mBAAbA,uCA5DoC,YAE1C,MAAMV,MAAQ,CAAC,EACf,MAAMC,WAAa,IAAIU,IACvB,MAAMT,QAAU,CAAC,EAExB,SAASU,SAASC,IAAI,CAAEC,QAAQ,CAAE,CAC9B,GAAID,QAAQb,MAAO,CACf,MAAM,IAAIe,MAAM,CAAC,MAAM,EAAEF,KAAK,gBAAgB,CAAC,CAAE,AACrD,CAAC,AAEDb,KAAK,CAACa,KAAK,CAAGC,SACdb,WAAWe,GAAG,CAACH,KACnB,CAEO,MAAMV,QAAU,CAACU,KAAMC,WAAa,CACvCF,SAASC,KAAMC,UACfF,SAASE,SAASD,IAAI,CAAEC,UAExBA,SAASG,KAAK,EAAEC,QAAQ,AAACC,GAAM,CAC3BP,SAASO,EAAGL,SAChB,EACJ,EAEO,MAAMV,UAAY,CAACS,KAAMO,SAAW,CACvClB,OAAO,CAACW,KAAK,CAAGO,MACpB,EAEO,MAAMf,SAAW,AAACgB,QAAW,CAACC,MAAOC,SAAUC,KAAMC,YAAc,CACtE,GAAI,CAACxB,WAAWyB,GAAG,CAACH,SAASI,IAAI,EAAG,CAChC,MAAM,IAAIC,uBAAe,CAAC,CAAC,8BAA8B,EAAEL,SAASI,IAAI,CAAC,EAAE,CAAC,CAAE,AAClF,CAAC,AAED,MAAME,WAAa7B,KAAK,CAACuB,SAASI,IAAI,CAAC,CACvC,OAAOE,UAAU,CAACR,OAAO,CAACC,MAAOC,SAAUC,KAAMC,UACrD,EAEO,MAAMnB,SAAWD,SAAS,YAC1B,MAAME,UAAYF,SAAS,aAE3B,MAAMG,kBAAoB,AAACc,OAAU,CACxC,MAAMQ,aAAe5B,OAAO,CAAC,eAAe,CAC5C,GAAI4B,aAAc,CACd,MAAMC,SAAW,CAACC,EAAGV,QAAW,OAAOA,QAAU,SAAWQ,aAAaR,OAASA,KAAK,CAEvF,OAAOW,KAAKC,SAAS,CAACZ,MAAOS,SACjC,CAAC,AAED,OAAOE,KAAKC,SAAS,CAACZ,MAC1B,EAEO,MAAMb,eAAiB,IAAM,CAChC,MAAMqB,aAAe5B,OAAO,CAAC,eAAe,CAC5C,GAAI4B,aAAc,CACd,OAAO,AAACR,OAAW,OAAOA,QAAU,SAAWQ,aAAaR,OAASA,MAAMa,QAAQ,EAAE,AACzF,CAAC,AAED,OAAO,IAAI,AACf,EAEO,MAAMzB,cAAgB,CAACY,MAAOc,KAAMZ,KAAMa,OAAS,CACtD,GAAIf,OAAS,IAAI,CAAE,CACf,GAAIc,KAAKE,OAAO,EAAI,IAAI,CAAE,CACtB,MAAO,CAAC,IAAI,CAAEF,KAAKE,OAAO,CAAC,AAC/B,MAAO,GAAIF,KAAKG,QAAQ,CAAE,CACtB,MAAO,CAAC,IAAI,CAAE,IAAI,CAAC,AACvB,CAAC,AAED,MAAM,IAAIC,uBAAe,CAAC,SAAYH,CAAAA,KAAO,CAAC,IAAI,EAAEA,KAAK,EAAE,CAAC,CAAG,EAAE,AAAD,EAAK,eAAgB,CACjFf,MACAc,KACAZ,KACAa,IACJ,EAAG,AACP,CAAC,AAED,GAAID,KAAKK,QAAQ,CAAE,MAAO,CAAC,IAAI,CAAEnB,MAAM,AAAC,CAExC,MAAO,CAAC,KAAK,CAAC,AAClB,CAGAtB,CAAAA,MAAMM,QAAQ,CAAGA,QACjBN,CAAAA,MAAMO,SAAS,CAAGA,SAClBP,CAAAA,MAAM0C,UAAU,CAAGzC"}