{"version":3,"sources":["../number.js"],"sourcesContent":["import { ValidationError } from './errors';\nimport toFloat from '@galaxar/utils/toFloat';\nimport { identity } from './functions';\nimport { beginSanitize } from './types';\n\nexport default {\n    name: 'number',\n    alias: ['float', 'double'],\n    defaultValue: 0,\n    validate: (value) => typeof value === 'number',\n    sanitize: (value, meta, i18n, path) => {\n        const [isDone, sanitized] = beginSanitize(value, meta, i18n, path);\n        if (isDone) return sanitized;\n\n        const raw = value;\n        value = toFloat(value);\n\n        if (isNaN(value)) {\n            throw new ValidationError('Invalid number value.', {\n                value: raw,\n                meta,\n                i18n,\n                path,\n            });\n        }\n\n        return value;\n    },\n\n    serialize: identity,\n};\n"],"names":["name","alias","defaultValue","validate","value","sanitize","meta","i18n","path","isDone","sanitized","beginSanitize","raw","toFloat","isNaN","ValidationError","serialize","identity"],"mappings":"oGAKA,iDAAA,kCALgC,4DACZ,oDACK,oCACK,qGAE9B,SAAe,CACXA,KAAM,SACNC,MAAO,CAAC,QAAS,SAAS,CAC1BC,aAAc,EACdC,SAAU,AAACC,OAAU,OAAOA,QAAU,SACtCC,SAAU,CAACD,MAAOE,KAAMC,KAAMC,OAAS,CACnC,KAAM,CAACC,OAAQC,UAAU,CAAGC,GAAAA,oBAAa,EAACP,MAAOE,KAAMC,KAAMC,MAC7D,GAAIC,OAAQ,OAAOC,SAAU,CAE7B,MAAME,IAAMR,MACZA,MAAQS,GAAAA,gBAAO,EAACT,OAEhB,GAAIU,MAAMV,OAAQ,CACd,MAAM,IAAIW,uBAAe,CAAC,wBAAyB,CAC/CX,MAAOQ,IACPN,KACAC,KACAC,IACJ,EAAG,AACP,CAAC,AAED,OAAOJ,KACX,EAEAY,UAAWC,mBAAQ,AACvB"}