{"version":3,"sources":["../lib/transformerOperators.js"],"sourcesContent":["//Query & aggregate operators (pure)\nconst SIZE = 'size';\nconst SUM = 'sum';\nconst GET_TYPE = 'typeof';\nconst MATCH = 'validate';\nconst GET_BY_INDEX = 'byIndex';\nconst GET_BY_KEY = 'byKey';\nconst FIND_INDEX = 'findIndex';\nconst FIND = 'find';\nconst IF = 'if';\n\n//Type casting operators (pure)\nconst CAST_ARRAY = 'castArray';\n\n//Math operators (pure)\nconst ADD = 'add';\nconst SUB = 'sub';\nconst MUL = 'mul';\nconst DIV = 'div';\nconst MOD = 'mod';\n\n//Collection operators (pure)\nconst KEYS = 'keys';\nconst VALUES = 'values';\nconst ENTRIES = 'pairs';\nconst OBJ_TO_ARRAY = 'toArray'; // like $objectToArray of mongodb\nconst FILTER_NULL = 'xNull';\nconst PICK = 'pick'; // filter by key\nconst OMIT = 'omit';\nconst SLICE = 'slice'; // limit offset, count\nconst GROUP = 'groupBy';\nconst SORT = 'orderBy';\nconst REVERSE = 'reverse';\nconst JOIN = 'join';\nconst MERGE = 'merge';\nconst FILTER = 'filterBy'; // filter by value\nconst REMAP = 'remap'; // map a key to another name\nconst TO_JSON = 'stringfy';\nconst TO_OBJ = 'parse';\n\n//Value updater (pure, copy on write)\nconst SET = 'set';\nconst ADD_ITEM = 'addItem';\nconst ASSIGN = 'assign';\nconst APPLY = 'apply';\nconst SANITIZE = 'sanitize';\nconst SPLIT = 'split';\nconst INTERPOLATE = 'interpolate';\n\n//Colllection modifier\nconst MAP = 'map';\nconst REDUCE = 'reduce';\n\nexport default {\n    SIZE,\n    SUM,\n    GET_TYPE,\n    MATCH,\n    GET_BY_INDEX,\n    GET_BY_KEY,\n    FIND_INDEX,\n    FIND,\n    IF,\n\n    CAST_ARRAY,\n\n    ADD,\n    SUB,\n    MUL,\n    DIV,\n    MOD,\n\n    KEYS,\n    VALUES,\n    ENTRIES,\n    OBJ_TO_ARRAY,\n    FILTER_NULL,\n    PICK, // filter by key\n    OMIT,\n    SLICE,\n    GROUP,\n    SORT,\n    REVERSE,\n    JOIN,\n    MERGE,\n    FILTER, // filter by value\n    REMAP, // map a key to another name\n    TO_JSON,\n    TO_OBJ,\n\n    SET,\n    ADD_ITEM,\n    ASSIGN,\n    APPLY,\n    SANITIZE,\n    SPLIT,\n    INTERPOLATE,\n\n    MAP,\n    REDUCE,\n};\n"],"names":["SIZE","SUM","GET_TYPE","MATCH","GET_BY_INDEX","GET_BY_KEY","FIND_INDEX","FIND","IF","CAST_ARRAY","ADD","SUB","MUL","DIV","MOD","KEYS","VALUES","ENTRIES","OBJ_TO_ARRAY","FILTER_NULL","PICK","OMIT","SLICE","GROUP","SORT","REVERSE","JOIN","MERGE","FILTER","REMAP","TO_JSON","TO_OBJ","SET","ADD_ITEM","ASSIGN","APPLY","SANITIZE","SPLIT","INTERPOLATE","MAP","REDUCE"],"mappings":"oGAqDA,iDAAA,YApDA,MAAMA,KAAO,OACb,MAAMC,IAAM,MACZ,MAAMC,SAAW,SACjB,MAAMC,MAAQ,WACd,MAAMC,aAAe,UACrB,MAAMC,WAAa,QACnB,MAAMC,WAAa,YACnB,MAAMC,KAAO,OACb,MAAMC,GAAK,KAGX,MAAMC,WAAa,YAGnB,MAAMC,IAAM,MACZ,MAAMC,IAAM,MACZ,MAAMC,IAAM,MACZ,MAAMC,IAAM,MACZ,MAAMC,IAAM,MAGZ,MAAMC,KAAO,OACb,MAAMC,OAAS,SACf,MAAMC,QAAU,QAChB,MAAMC,aAAe,UACrB,MAAMC,YAAc,QACpB,MAAMC,KAAO,OACb,MAAMC,KAAO,OACb,MAAMC,MAAQ,QACd,MAAMC,MAAQ,UACd,MAAMC,KAAO,UACb,MAAMC,QAAU,UAChB,MAAMC,KAAO,OACb,MAAMC,MAAQ,QACd,MAAMC,OAAS,WACf,MAAMC,MAAQ,QACd,MAAMC,QAAU,WAChB,MAAMC,OAAS,QAGf,MAAMC,IAAM,MACZ,MAAMC,SAAW,UACjB,MAAMC,OAAS,SACf,MAAMC,MAAQ,QACd,MAAMC,SAAW,WACjB,MAAMC,MAAQ,QACd,MAAMC,YAAc,cAGpB,MAAMC,IAAM,MACZ,MAAMC,OAAS,eAEf,SAAe,CACXxC,KACAC,IACAC,SACAC,MACAC,aACAC,WACAC,WACAC,KACAC,GAEAC,WAEAC,IACAC,IACAC,IACAC,IACAC,IAEAC,KACAC,OACAC,QACAC,aACAC,YACAC,KACAC,KACAC,MACAC,MACAC,KACAC,QACAC,KACAC,MACAC,OACAC,MACAC,QACAC,OAEAC,IACAC,SACAC,OACAC,MACAC,SACAC,MACAC,YAEAC,IACAC,MACJ"}