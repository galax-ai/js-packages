{"version":3,"sources":["../lib/FiniteStateMachine.js"],"sourcesContent":["import { eachAsync_ } from '@galaxar/utils';\nimport { InvalidArgument, Forbidden } from '@galaxar/types';\n\n/**\n *\n * Action rule:\n *  desc: description of this transition\n *  when: pre transition condition check\n *  target: target state\n *  before: transforming before applying to the state\n *  after: trigger another action after transition\n */\n\nclass FiniteStateMachine {\n    static OK = [true];\n    static fail = (reason) => [false, reason];\n    static triggerAll_ =\n        (array) =>\n        (...args) =>\n            eachAsync_(array, (action_) => action_(...args));\n\n    static ifAny =\n        (array) =>\n        async (...args) => {\n            const l = array.length;\n            const reason = [];\n\n            for (let i = 0; i < l; i++) {\n                const checker_ = array[i];\n\n                const [allowed, disallowedReason] = await checker_(...args);\n                if (allowed) {\n                    return FiniteStateMachine.OK;\n                }\n\n                reason.push(disallowedReason);\n            }\n\n            return FiniteStateMachine.fail('None of the required conditions met.\\n' + reason.join('\\n'));\n        };\n\n    static ifAll =\n        (array) =>\n        async (...args) => {\n            const l = array.length;\n\n            for (let i = 0; i < l; i++) {\n                const checker_ = array[i];\n\n                const [allowed, disallowedReason] = await checker_(...args);\n                if (!allowed) {\n                    return FiniteStateMachine.fail(disallowedReason);\n                }\n            }\n\n            return FiniteStateMachine.OK;\n        };\n\n    constructor(app, transitionTable, stateFetcher, stateUpdater) {\n        this.app = app;\n\n        this.transitions = transitionTable;\n        this.stateFetcher_ = stateFetcher;\n        this.stateUpdater_ = stateUpdater;\n    }\n\n    /**\n     * Get a list of allowed actions based on the current state.\n     * @param {*} context\n     * @param {boolean} withDisallowedReason\n     */\n    async getAllowedActions_(context, withDisallowedReason) {\n        const currentState = await this.stateFetcher_(this.app, context);\n\n        // from state\n        const transitions = this.transitions[currentState];\n        if (!transitions) {\n            throw new InvalidArgument(`State \"${currentState}\" rules not found in the transition table.`);\n        }\n\n        const allowed = [];\n        const disallowed = [];\n\n        await eachAsync_(transitions, async (rule, action) => {\n            const [actionAllowed, disallowedReason] =\n                (rule.when && (await rule.when(this.app, context))) || FiniteStateMachine.OK;\n\n            if (actionAllowed) {\n                allowed.push({\n                    action,\n                    desc: rule.desc,\n                    targetState: rule.target,\n                });\n            } else if (withDisallowedReason) {\n                disallowed.push({\n                    action,\n                    desc: rule.desc,\n                    targetState: rule.target,\n                    reason: disallowedReason,\n                });\n            }\n        });\n\n        const ret = {\n            allowed,\n        };\n\n        if (withDisallowedReason) {\n            ret.disallowed = disallowed;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Perform the specified action.\n     * @param {*} action\n     * @param {*} context\n     * @param {*} payload\n     * @param {*} updateOpts\n     * @param {*} connOpts\n     */\n    async performAction_(action, context, payload, updateOpts, connOpts) {\n        const currentState = await this.stateFetcher_(this.app, context, connOpts);\n\n        const transitions = this.transitions[currentState];\n        if (!transitions) {\n            throw new InvalidArgument(`State \"${currentState}\" rules not found in the transition table.`);\n        }\n\n        const rule = transitions && transitions[action];\n        if (!rule) {\n            throw new Forbidden(`Action \"${action}\" is not allowed in \"${currentState}\" state.`);\n        }\n\n        if (rule.when) {\n            const [allowed, disallowedReason] = await rule.when(this.app, context);\n            if (!allowed) {\n                throw new Forbidden(\n                    disallowedReason || `The current state does not meet the requirements of \"${action}\" action.`\n                );\n            }\n        }\n\n        const entityUpdate = (rule.before && (await rule.before(this.app, context, payload))) || { ...payload };\n        const [actuallyUpdated, updateResult] = await this.stateUpdater_(\n            this.app,\n            context,\n            entityUpdate,\n            rule.target,\n            updateOpts,\n            connOpts\n        );\n\n        if (actuallyUpdated && rule.after) {\n            await rule.after(this.app, context, connOpts);\n        }\n\n        return updateResult;\n    }\n}\n\nexport default FiniteStateMachine;\n"],"names":["FiniteStateMachine","getAllowedActions_","context","withDisallowedReason","currentState","stateFetcher_","app","transitions","InvalidArgument","allowed","disallowed","eachAsync_","rule","action","actionAllowed","disallowedReason","when","OK","push","desc","targetState","target","reason","ret","performAction_","payload","updateOpts","connOpts","Forbidden","entityUpdate","before","actuallyUpdated","updateResult","stateUpdater_","after","constructor","transitionTable","stateFetcher","stateUpdater","fail","triggerAll_","array","args","action_","ifAny","l","length","i","checker_","join","ifAll"],"mappings":"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"}