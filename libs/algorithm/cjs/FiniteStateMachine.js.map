{"version":3,"sources":["../lib/FiniteStateMachine.js"],"sourcesContent":["import { eachAsync_ } from '@galaxar/utils';\nimport { InvalidArgument, Forbidden } from '@galaxar/types';\n\n/**\n *\n * Action rule:\n *  desc: description of this transition\n *  when: pre transition condition check\n *  target: target state\n *  before: transforming before applying to the state\n *  after: trigger another action after transition\n */\n\nclass FiniteStateMachine {\n    static OK = [true];\n    static fail = (reason) => [false, reason];\n    static triggerAll_ =\n        (array) =>\n        (...args) =>\n            eachAsync_(array, (action_) => action_(...args));\n\n    static ifAny = (array) => async (...args) => {\n            const l = array.length;\n            const reason = [];\n\n            for (let i = 0; i < l; i++) {\n                const checker_ = array[i];\n\n                const [allowed, disallowedReason] = await checker_(...args);\n                if (allowed) {\n                    return FiniteStateMachine.OK;\n                }\n\n                reason.push(disallowedReason);\n            }\n\n            return FiniteStateMachine.fail('None of the required conditions met.\\n' + reason.join('\\n'));\n        };\n\n    static ifAll = (array) => async (...args) => {\n            const l = array.length;\n\n            for (let i = 0; i < l; i++) {\n                const checker_ = array[i];\n\n                const [allowed, disallowedReason] = await checker_(...args);\n                if (!allowed) {\n                    return FiniteStateMachine.fail(disallowedReason);\n                }\n            }\n\n            return FiniteStateMachine.OK;\n        };\n\n    constructor(app, transitionTable, stateFetcher, stateUpdater) {\n        this.app = app;\n\n        this.transitions = transitionTable;\n        this.stateFetcher_ = stateFetcher;\n        this.stateUpdater_ = stateUpdater;\n    }\n\n    /**\n     * Get a list of allowed actions based on the current state.\n     * @param {*} context\n     * @param {boolean} withDisallowedReason\n     */\n    async getAllowedActions_(context, withDisallowedReason) {\n        const currentState = await this.stateFetcher_(this.app, context);\n\n        // from state\n        const transitions = this.transitions[currentState];\n        if (!transitions) {\n            throw new InvalidArgument(`State \"${currentState}\" rules not found in the transition table.`);\n        }\n\n        const allowed = [];\n        const disallowed = [];\n\n        await eachAsync_(transitions, async (rule, action) => {\n            const [actionAllowed, disallowedReason] =\n                (rule.when && (await rule.when(this.app, context))) || FiniteStateMachine.OK;\n\n            if (actionAllowed) {\n                allowed.push({\n                    action,\n                    desc: rule.desc,\n                    targetState: rule.target,\n                });\n            } else if (withDisallowedReason) {\n                disallowed.push({\n                    action,\n                    desc: rule.desc,\n                    targetState: rule.target,\n                    reason: disallowedReason,\n                });\n            }\n        });\n\n        const ret = {\n            allowed,\n        };\n\n        if (withDisallowedReason) {\n            ret.disallowed = disallowed;\n        }\n\n        return ret;\n    }\n\n    /**\n     * Perform the specified action.\n     * @param {*} action\n     * @param {*} context\n     * @param {*} payload\n     * @param {*} updateOpts\n     * @param {*} connOpts\n     */\n    async performAction_(action, context, payload, updateOpts, connOpts) {\n        const currentState = await this.stateFetcher_(this.app, context, connOpts);\n\n        const transitions = this.transitions[currentState];\n        if (!transitions) {\n            throw new InvalidArgument(`State \"${currentState}\" rules not found in the transition table.`);\n        }\n\n        const rule = transitions && transitions[action];\n        if (!rule) {\n            throw new Forbidden(`Action \"${action}\" is not allowed in \"${currentState}\" state.`);\n        }\n\n        if (rule.when) {\n            const [allowed, disallowedReason] = await rule.when(this.app, context);\n            if (!allowed) {\n                throw new Forbidden(\n                    disallowedReason || `The current state does not meet the requirements of \"${action}\" action.`\n                );\n            }\n        }\n\n        const entityUpdate = (rule.before && (await rule.before(this.app, context, payload))) || { ...payload };\n        const [actuallyUpdated, updateResult] = await this.stateUpdater_(\n            this.app,\n            context,\n            entityUpdate,\n            rule.target,\n            updateOpts,\n            connOpts\n        );\n\n        if (actuallyUpdated && rule.after) {\n            await rule.after(this.app, context, connOpts);\n        }\n\n        return updateResult;\n    }\n}\n\nexport default FiniteStateMachine;\n"],"names":["FiniteStateMachine","getAllowedActions_","context","withDisallowedReason","currentState","stateFetcher_","app","transitions","InvalidArgument","allowed","disallowed","eachAsync_","rule","action","actionAllowed","disallowedReason","when","OK","push","desc","targetState","target","reason","ret","performAction_","payload","updateOpts","connOpts","Forbidden","entityUpdate","before","actuallyUpdated","updateResult","stateUpdater_","after","constructor","transitionTable","stateFetcher","stateUpdater","fail","triggerAll_","array","args","action_","ifAny","l","length","i","checker_","join","ifAll"],"mappings":"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"}