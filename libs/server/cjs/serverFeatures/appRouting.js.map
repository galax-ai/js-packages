{"version":3,"sources":["../../lib/serverFeatures/appRouting.js"],"sourcesContent":["/**\n * Enable routing web requests to a child app.\n * @module Feature_AppRouting\n *\n * @example\n *\n *  'appRouting': {\n *      '<mounting point>': {\n *          name: 'app name',\n *          npmModule: false, // whether is a npm module\n *          options: { // module options\n *          },\n *          settings: { // can override module defined settings\n *          },\n *          middlewares: { // can override middlewares\n *          }\n *      }\n *  }\n */\n\nimport path from 'node:path';\nimport { _, batchAsync_ } from '@galaxar/utils';\nimport { fs, isDir_ } from '@galaxar/sys';\nimport { InvalidConfiguration } from '@galaxar/types';\nimport { Feature } from '@galaxar/app';\n\nimport WebModule from '../WebModule';\n\nexport default {\n    /**\n     * This feature is loaded at plugin stage.\n     * @member {string}\n     */\n    stage: Feature.PLUGIN,\n\n    /**\n     * Load the feature.\n     * @param {WebServer} server - The web server module object.\n     * @param {object} routes - Routes and configuration.\n     * @returns {Promise.<*>}\n     */\n    load_: async (server, routes) =>\n        batchAsync_(routes, async (config, baseRoute) => {\n            if (!config.name) {\n                throw new InvalidConfiguration('Missing app name.', app, `appRouting.${baseRoute}.name`);\n            }\n\n            let options = {\n                env: server.env,\n                logLevel: server.options.logLevel,\n                traceMiddlewares: server.options.traceMiddlewares,\n                ...config.options,\n            };\n\n            let appPath;\n\n            if (config.npmModule) {\n                appPath = server.toAbsolutePath('node_modules', config.name);\n            } else {\n                appPath = path.join(server.appModulesPath, config.name);\n            }\n\n            let exists = (await fs.pathExists(appPath)) && (await isDir_(appPath));\n            if (!exists) {\n                throw new InvalidConfiguration(\n                    `App [${config.name}] not found at ${appPath}`,\n                    server,\n                    `appRouting.${baseRoute}.name`\n                );\n            }\n\n            let app = new WebModule(server, config.name, baseRoute, appPath, options);\n            app.now = server.now;\n\n            app.on('configLoaded', () => {\n                if (!_.isEmpty(config.overrides)) {\n                    Object.assign(app.config, config.overrides);\n                    server.log('verbose', 'App config is overrided.');\n                }\n\n                if (!_.isEmpty(config.settings)) {\n                    app.config.settings = Object.assign({}, app.config.settings, config.settings);\n                    server.log('verbose', `App settings of [${app.name}] is overrided.`);\n                }\n\n                if (!_.isEmpty(config.middlewares)) {\n                    let middlewaresToAppend = app.config.middlewares;\n                    app.config.middlewares = { ...config.middlewares };\n                    _.defaults(app.config.middlewares, middlewaresToAppend);\n                }\n            });\n\n            let relativePath = path.relative(server.workingPath, appPath);\n            server.log('verbose', `Loading app [${app.name}] from \"${relativePath}\" ...`);\n\n            await app.start_();\n\n            server.log('verbose', `App [${app.name}] is loaded.`);\n\n            //delayed the app routes mounting after all plugins of the server are loaded\n            server.on('before:' + Feature.FINAL, () => {\n                server.mountApp(app);\n            });\n        }),\n};\n"],"names":["stage","Feature","PLUGIN","load_","server","routes","batchAsync_","config","baseRoute","name","InvalidConfiguration","app","options","env","logLevel","traceMiddlewares","appPath","npmModule","toAbsolutePath","path","join","appModulesPath","exists","fs","pathExists","isDir_","WebModule","now","on","_","isEmpty","overrides","Object","assign","log","settings","middlewares","middlewaresToAppend","defaults","relativePath","relative","workingPath","start_","FINAL","mountApp"],"mappings":"oGA4BA,iDAAA,6DARiB,mCACc,qCACJ,qCACU,qCACb,kEAEF,2GAEtB,SAAe,CAKXA,MAAOC,YAAO,CAACC,MAAM,CAQrBC,MAAO,MAAOC,OAAQC,SAClBC,GAAAA,kBAAW,EAACD,OAAQ,MAAOE,OAAQC,YAAc,CAC7C,GAAI,CAACD,OAAOE,IAAI,CAAE,CACd,MAAM,IAAIC,2BAAoB,CAAC,oBAAqBC,IAAK,CAAC,WAAW,EAAEH,UAAU,KAAK,CAAC,CAAE,AAC7F,CAAC,AAED,IAAII,QAAU,CACVC,IAAKT,OAAOS,GAAG,CACfC,SAAUV,OAAOQ,OAAO,CAACE,QAAQ,CACjCC,iBAAkBX,OAAOQ,OAAO,CAACG,gBAAgB,CACjD,GAAGR,OAAOK,OAAO,AACrB,EAEA,IAAII,QAEJ,GAAIT,OAAOU,SAAS,CAAE,CAClBD,QAAUZ,OAAOc,cAAc,CAAC,eAAgBX,OAAOE,IAAI,CAC/D,KAAO,CACHO,QAAUG,iBAAI,CAACC,IAAI,CAAChB,OAAOiB,cAAc,CAAEd,OAAOE,IAAI,CAC1D,CAAC,AAED,IAAIa,OAAS,AAAC,MAAMC,OAAE,CAACC,UAAU,CAACR,UAAc,MAAMS,GAAAA,WAAM,EAACT,SAC7D,GAAI,CAACM,OAAQ,CACT,MAAM,IAAIZ,2BAAoB,CAC1B,CAAC,KAAK,EAAEH,OAAOE,IAAI,CAAC,eAAe,EAAEO,QAAQ,CAAC,CAC9CZ,OACA,CAAC,WAAW,EAAEI,UAAU,KAAK,CAAC,CAChC,AACN,CAAC,AAED,IAAIG,IAAM,IAAIe,kBAAS,CAACtB,OAAQG,OAAOE,IAAI,CAAED,UAAWQ,QAASJ,QACjED,CAAAA,IAAIgB,GAAG,CAAGvB,OAAOuB,GAAG,CAEpBhB,IAAIiB,EAAE,CAAC,eAAgB,IAAM,CACzB,GAAI,CAACC,QAAC,CAACC,OAAO,CAACvB,OAAOwB,SAAS,EAAG,CAC9BC,OAAOC,MAAM,CAACtB,IAAIJ,MAAM,CAAEA,OAAOwB,SAAS,EAC1C3B,OAAO8B,GAAG,CAAC,UAAW,2BAC1B,CAAC,AAED,GAAI,CAACL,QAAC,CAACC,OAAO,CAACvB,OAAO4B,QAAQ,EAAG,CAC7BxB,IAAIJ,MAAM,CAAC4B,QAAQ,CAAGH,OAAOC,MAAM,CAAC,CAAC,EAAGtB,IAAIJ,MAAM,CAAC4B,QAAQ,CAAE5B,OAAO4B,QAAQ,EAC5E/B,OAAO8B,GAAG,CAAC,UAAW,CAAC,iBAAiB,EAAEvB,IAAIF,IAAI,CAAC,eAAe,CAAC,CACvE,CAAC,AAED,GAAI,CAACoB,QAAC,CAACC,OAAO,CAACvB,OAAO6B,WAAW,EAAG,CAChC,IAAIC,oBAAsB1B,IAAIJ,MAAM,CAAC6B,WAAW,AAChDzB,CAAAA,IAAIJ,MAAM,CAAC6B,WAAW,CAAG,CAAE,GAAG7B,OAAO6B,WAAW,AAAC,EACjDP,QAAC,CAACS,QAAQ,CAAC3B,IAAIJ,MAAM,CAAC6B,WAAW,CAAEC,oBACvC,CAAC,AACL,GAEA,IAAIE,aAAepB,iBAAI,CAACqB,QAAQ,CAACpC,OAAOqC,WAAW,CAAEzB,SACrDZ,OAAO8B,GAAG,CAAC,UAAW,CAAC,aAAa,EAAEvB,IAAIF,IAAI,CAAC,QAAQ,EAAE8B,aAAa,KAAK,CAAC,CAE5E,OAAM5B,IAAI+B,MAAM,GAEhBtC,OAAO8B,GAAG,CAAC,UAAW,CAAC,KAAK,EAAEvB,IAAIF,IAAI,CAAC,YAAY,CAAC,EAGpDL,OAAOwB,EAAE,CAAC,UAAY3B,YAAO,CAAC0C,KAAK,CAAE,IAAM,CACvCvC,OAAOwC,QAAQ,CAACjC,IACpB,EACJ,EACR"}