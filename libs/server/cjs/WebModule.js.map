{"version":3,"sources":["../lib/WebModule.js"],"sourcesContent":["import { _, text } from '@galaxar/utils';\nimport { ServiceContainer, ModuleBase } from '@galaxar/app';\nimport Routable from './Routable';\n\n/**\n * Web application module class.\n * @class\n * @extends Routable(LibModule)\n */\nclass WebModule extends ModuleBase(Routable(ServiceContainer)) {\n    /**\n     * @param {WebServer} server\n     * @param {string} name - The name of the app module.\n     * @param {string} route - The base route of the app module.\n     * @param {string} appPath - The path to load the app's module files\n     * @param {object} [options] - The app module's extra options defined in its parent's configuration.\n     */\n    constructor(server, name, route, appPath, options) {\n        super(server, name, appPath, options);\n\n        this.server = this.host;\n\n        /**\n         * Mounting route.\n         * @member {string}\n         */\n        this.route = text.ensureStartsWith(text.dropIfEndsWith(route, '/'), '/');\n    }\n\n    /**\n     * Require a module from the source path of an app module\n     * @param {*} relativePath\n     */\n    requireFromApp(appName, relativePath) {\n        return this.server.requireFromApp(appName, relativePath);\n    }\n}\n\nexport default WebModule;\n"],"names":["WebModule","ModuleBase","Routable","ServiceContainer","requireFromApp","appName","relativePath","server","constructor","name","route","appPath","options","host","text","ensureStartsWith","dropIfEndsWith"],"mappings":";;;;+BAsCA;;;eAAA;;;uBAtCwB;qBACqB;iEACxB;;;;;;AAErB;;;;CAIC,GACD,MAAMA,kBAAkBC,IAAAA,eAAU,EAACC,IAAAA,iBAAQ,EAACC,qBAAgB;IAoBxD;;;KAGC,GACDC,eAAeC,OAAO,EAAEC,YAAY,EAAE;QAClC,OAAO,IAAI,CAACC,MAAM,CAACH,cAAc,CAACC,SAASC;IAC/C;IAzBA;;;;;;KAMC,GACDE,YAAYD,MAAM,EAAEE,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,OAAO,CAAE;QAC/C,KAAK,CAACL,QAAQE,MAAME,SAASC;QAE7B,IAAI,CAACL,MAAM,GAAG,IAAI,CAACM,IAAI;QAEvB;;;SAGC,GACD,IAAI,CAACH,KAAK,GAAGI,WAAI,CAACC,gBAAgB,CAACD,WAAI,CAACE,cAAc,CAACN,OAAO,MAAM;IACxE;AASJ;MAEA,WAAeV"}