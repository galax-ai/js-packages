{"version":3,"sources":["../../lib/appFeatures/routing.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Enable web request routing.\n * @module Feature_Routing\n */\n\nconst { Feature } = require(\"..\").Enums;\nconst { _, eachAsync_ } = require(\"@genx/july\");\n\nmodule.exports = {\n    /**\n     * This feature is loaded at ready (final) stage.\n     * @member {string}\n     */\n    type: Feature.PLUGIN,\n\n    /**\n     * Load the feature.\n     * @param {Routable} app - The app module object\n     * @param {object} routes - Routes and configuration\n     * @returns {Promise.<*>}\n     */\n    load_: (app, routes) => {\n        app.on(\"after:\" + Feature.PLUGIN, (waitFor) => {\n            waitFor.push(\n                eachAsync_(routes, async (routersConfig, route) => {\n                    if (_.isPlainObject(routersConfig)) {\n                        return eachAsync_(routersConfig, async (options, type) => {\n                            let loader_ = require(\"../routers/\" + type);\n\n                            app.log(\"verbose\", `A \"${type}\" router is created at \"${route}\" in app [${app.name}].`);\n\n                            return loader_(app, route, options);\n                        });\n                    } else {\n                        // 'route': 'method:/path'\n                        let mainRoute = \"/\",\n                            baseRoute = route;\n                        let pos = route.indexOf(\":/\");\n\n                        if (pos !== -1) {\n                            mainRoute = route.substring(0, pos + 2);\n                            baseRoute = route.substring(pos + 1);\n                        } else if (Array.isArray(routersConfig)) {\n                            //all handled by middleware chains\n                            mainRoute = \"all:/\";\n                        }\n\n                        let rules = {\n                            [mainRoute]: routersConfig,\n                        };\n\n                        let loader_ = require(\"../routers/rule\");\n                        app.log(\"verbose\", `A \"rule\" router is created at \"${baseRoute}\" in app [${app.name}].`);\n\n                        return loader_(app, baseRoute, { rules: rules });\n                    }\n                })\n            );\n        });\n    },\n};\n"],"names":["Feature","require","Enums","_","eachAsync_","module","exports","type","PLUGIN","load_","app","routes","on","waitFor","push","routersConfig","route","isPlainObject","options","loader_","log","name","mainRoute","baseRoute","pos","indexOf","substring","Array","isArray","rules"],"mappings":"AAAA,aAOA,KAAM,CAAEA,OAAO,CAAE,CAAGC,QAAQ,MAAMC,KAAK,CACvC,KAAM,CAAEC,CAAC,CAAEC,UAAU,CAAE,CAAGH,QAAQ,aAElCI,CAAAA,OAAOC,OAAO,CAAG,CAKbC,KAAMP,QAAQQ,MAAM,CAQpBC,MAAO,CAACC,IAAKC,SAAW,CACpBD,IAAIE,EAAE,CAAC,SAAWZ,QAAQQ,MAAM,CAAE,AAACK,SAAY,CAC3CA,QAAQC,IAAI,CACRV,WAAWO,OAAQ,MAAOI,cAAeC,QAAU,CAC/C,GAAIb,EAAEc,aAAa,CAACF,eAAgB,CAChC,OAAOX,WAAWW,cAAe,MAAOG,QAASX,OAAS,CACtD,IAAIY,QAAUlB,QAAQ,cAAgBM,MAEtCG,IAAIU,GAAG,CAAC,UAAW,CAAC,GAAG,EAAEb,KAAK,wBAAwB,EAAES,MAAM,UAAU,EAAEN,IAAIW,IAAI,CAAC,EAAE,CAAC,EAEtF,OAAOF,QAAQT,IAAKM,MAAOE,QAC/B,EACJ,KAAO,CAEH,IAAII,UAAY,IACZC,UAAYP,MAChB,IAAIQ,IAAMR,MAAMS,OAAO,CAAC,MAExB,GAAID,MAAQ,CAAC,EAAG,CACZF,UAAYN,MAAMU,SAAS,CAAC,EAAGF,IAAM,GACrCD,UAAYP,MAAMU,SAAS,CAACF,IAAM,EACtC,MAAO,GAAIG,MAAMC,OAAO,CAACb,eAAgB,CAErCO,UAAY,OAChB,CAAC,AAED,IAAIO,MAAQ,CACR,CAACP,UAAU,CAAEP,aACjB,EAEA,IAAII,QAAUlB,QAAQ,mBACtBS,IAAIU,GAAG,CAAC,UAAW,CAAC,+BAA+B,EAAEG,UAAU,UAAU,EAAEb,IAAIW,IAAI,CAAC,EAAE,CAAC,EAEvF,OAAOF,QAAQT,IAAKa,UAAW,CAAEM,MAAOA,KAAM,EAClD,CAAC,AACL,GAER,EACJ,CACJ"}