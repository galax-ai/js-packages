"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:function(){return _default}});const _nodepath=_interop_require_default(require("node:path"));const _sys=require("@galaxar/sys");const _glob=require("glob");const _utils=require("@galaxar/utils");const _types=require("@galaxar/types");const _defaultOpts=require("./defaultOpts");function _interop_require_default(obj){return obj&&obj.__esModule?obj:{default:obj}}const Routable=T=>{class _class extends T{async start_(){this.middlewareFactoryRegistry={};return super.start_()}async stop_(){delete this.middlewareFactoryRegistry;return super.stop_()}loadMiddlewaresFrom(dir){let files=(0,_glob.globSync)(_nodepath.default.join(dir,"**/*.{js,ts,mjs,cjs}"),{nodir:true});files.forEach(file=>this.registerMiddlewareFactory(_utils.text.baseName(file),require(file)))}registerMiddlewareFactory(name,factoryMethod){if(typeof factoryMethod!=="function"){if(factoryMethod.__esModule&&typeof factoryMethod.default==="function"){factoryMethod=factoryMethod.default}else{throw new _types.InvalidArgument("Invalid middleware factory: "+name)}}if(name in this.middlewareFactoryRegistry){throw new _types.ApplicationError('Middleware "'+name+'" already registered!')}this.middlewareFactoryRegistry[name]=factoryMethod;this.log("verbose",`Registered named middleware [${name}].`)}getMiddlewareFactory(name){const factory=this.middlewareFactoryRegistry[name];if(factory!=null){return factory}if(this.server&&!this.isServer){return this.server.getMiddlewareFactory(name)}let npmMiddleware=this.tryRequire(name);if(npmMiddleware){return npmMiddleware}throw new _types.ApplicationError(`Don't know where to load middleware "${name}".`)}useMiddlewares(router,middlewares){let middlewareFactory,middleware;let middlewareFunctions=[];if(_utils._.isPlainObject(middlewares)){_utils._.forOwn(middlewares,(options,name)=>{middlewareFactory=this.getMiddlewareFactory(name);middleware=middlewareFactory(options,this);middlewareFunctions.push({name,middleware})})}else{middlewares=_utils._.castArray(middlewares);_utils._.each(middlewares,middlewareEntry=>{let type=typeof middlewareEntry;if(type==="string"){middlewareFactory=this.getMiddlewareFactory(middlewareEntry);middleware=middlewareFactory(undefined,this);middlewareFunctions.push({name:middlewareEntry,middleware})}else if(type==="function"){middlewareFunctions.push({name:middlewareEntry.name||"unamed middleware",middleware:middlewareEntry})}else if(Array.isArray(middlewareEntry)){if(middlewareEntry.length===0){throw new _types.InvalidConfiguration("Empty array found as middleware entry!",this,"middlewares")}middlewareFactory=this.getMiddlewareFactory(middlewareEntry[0]);middleware=middlewareFactory(middlewareEntry.length>1?middlewareEntry[1]:null,this);middlewareFunctions.push({name:middlewareEntry[0],middleware})}else{if(!_utils._.isPlainObject(middlewareEntry)||!("name"in middlewareEntry)){throw new _types.InvalidConfiguration("Invalid middleware entry!",this,"middlewares")}middlewareFactory=this.getMiddlewareFactory(middlewareEntry.name);middleware=middlewareFactory(middlewareEntry.options,this);middlewareFunctions.push({name:middlewareEntry.name,middleware})}})}middlewareFunctions.forEach(({name,middleware})=>{if(Array.isArray(middleware)){middleware.forEach(m=>this.useMiddleware(router,m,name))}else{this.useMiddleware(router,middleware,name)}});return this}addRoute(router,method,route,actions){let handlers=[],middlewareFactory;if(_utils._.isPlainObject(actions)){_utils._.each(actions,(options,name)=>{middlewareFactory=this.getMiddlewareFactory(name);handlers.push(this._wrapMiddlewareTracer(middlewareFactory(options,this),name))})}else{actions=_utils._.castArray(actions);let lastIndex=actions.length-1;_utils._.each(actions,(action,i)=>{let type=typeof action;if(i===lastIndex){if(type==="string"&&action.lastIndexOf(".")>0){action={name:"action",options:action};type="object"}}if(type==="string"){middlewareFactory=this.getMiddlewareFactory(action);let middleware=middlewareFactory(null,this);if(Array.isArray(middleware)){middleware.forEach((middlewareItem,i)=>handlers.push(this._wrapMiddlewareTracer(middlewareItem,`${action}-${i}`+(middleware.name?"-"+middleware.name:""))))}else{handlers.push(this._wrapMiddlewareTracer(middleware,action))}}else if(type==="function"){handlers.push(this._wrapMiddlewareTracer(action))}else if(Array.isArray(action)){if(action.length===0||action.length>2){throw new _types.InvalidConfiguration("Invalid middleware entry!",this,"middlewares")}middlewareFactory=this.getMiddlewareFactory(action[0]);handlers.push(this._wrapMiddlewareTracer(middlewareFactory(action.length>1?action[1]:undefined,this)))}else{if(typeof action!=="object"||!("name"in action)){throw new _types.InvalidConfiguration("Invalid middleware entry!",this,"middlewares")}middlewareFactory=this.getMiddlewareFactory(action.name);handlers.push(this._wrapMiddlewareTracer(middlewareFactory(action.options,this),action.name))}})}router[method](route,...handlers);let endpoint=router.opts.prefix?_utils.url.join(this.route,router.opts.prefix,route):_utils.url.join(this.route,route);this.log("verbose",`Route "${method}:${endpoint}" is added from module [${this.name}].`);return this}requireFeatures(features,middleware){let hasNotEnabled=_utils._.find(_utils._.castArray(features),feature=>!this.enabled(feature));if(hasNotEnabled){throw new _types.InvalidConfiguration(`Middleware "${middleware}" requires "${hasNotEnabled}" feature to be enabled.`,this,`middlewares.${middleware}`)}}addRouter(nestedRouter){this.router.use(nestedRouter.routes());this.router.use(nestedRouter.allowedMethods());return this}toWebPath(relativePath,...pathOrQuery){let url,query;if(pathOrQuery&&pathOrQuery.length>0&&(pathOrQuery.length>1||pathOrQuery[0]!==undefined)){if(_utils._.isObject(pathOrQuery[pathOrQuery.length-1])){query=pathOrQuery.pop()}pathOrQuery.unshift(relativePath);url=_utils.url.join(this.route,...pathOrQuery)}else{url=_utils.url.join(this.route,relativePath)}url=_utils.text.ensureStartsWith(url,"/");if(query){url=_utils.url.appendQuery(url,query);url=url.replace("/?","?")}return url}useMiddleware(router,middleware,name){if(typeof middleware!=="function"){throw new _types.InvalidArgument("Invalid middleware.",{name,middleware})}router.use(this._wrapMiddlewareTracer(middleware,name));this.log("verbose",`Attached middleware [${name}].`)}_wrapMiddlewareTracer(middleware,name){if(this.options.traceMiddlewares){return async(ctx,next)=>{this.log("debug",`Step in middleware "${name||middleware.name}" ...`);let ret=await middleware(ctx,next);this.log("debug",`Step out from middleware "${name||middleware.name}".`);return ret}}return middleware}_createEngine(){try{let Engine=require(`./engines/${this.options.engine}`);if(Engine.__esModule&&typeof Engine.default==="function"){Engine=Engine.default}return new Engine(this)}catch(err){if(err.code==="MODULE_NOT_FOUND"){throw new _types.InvalidArgument(`Engine "${this.options.engine}" is not supported.`)}throw err}}_getFeatureFallbackPath(){let pathArray=super._getFeatureFallbackPath();pathArray.splice(1,0,_nodepath.default.resolve(__dirname,"appFeatures"));return pathArray}constructor(name,options){super(name,{..._defaultOpts.defaultRoutableOpts,...options});this.publicPath=this.toAbsolutePath(this.options.publicPath);this.controllersPath=this.toAbsolutePath(this.options.controllersPath);this.routable=true;this.router=this._createEngine();this.router.use(this.router.middleware((ctx,next)=>{ctx.appModule=this;return next()}));this.on("configLoaded",()=>{if(_sys.fs.pathExistsSync(this.middlewaresPath)&&(0,_sys.isDir)(this.middlewaresPath)){this.loadMiddlewaresFrom(this.middlewaresPath)}})}}return _class};const _default=Routable;
//# sourceMappingURL=Routable.js.map