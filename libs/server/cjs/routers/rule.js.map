{"version":3,"sources":["../../lib/routers/rule.js"],"sourcesContent":["import { _, text } from '@galaxar/utils';\nimport { InvalidConfiguration } from '@galaxar/types';\nimport { supportedMethods } from '../helpers';\n\n/**\n * Rule based router.\n * @module Router_Rule\n */\n\n/**\n * Create a rule-based router.\n * @param {WebModule} app\n * @param {string} baseRoute\n * @param {object} options\n * @example\n * '<base path>': {\n *     rule: {\n *         middlewares:\n *         rules: {\n *             // type 1, default is \"get\", methods mapped to one action\n *             '<sub route>': '<controller with relative path>.<action>',\n *\n *             // type 2, different methods mapped to different method\n *             '<sub route>': {\n *                '<method>': '<controller with relative path>.<action>'\n *             },\n *\n *             // type 3, with middleware\n *             '<sub route>': {\n *                 '<method>': {\n *                    '<middleware name>': { //middleware options }\n *                 }\n *             },\n *\n *             // type 4, all methods mapped to one action\n *             '<method>:/<sub route>': '<controller with relative path>.<action>'\n *\n *             // type 5, all methods mapped to one action\n *             '<method>:/<sub route>': {\n *                 '<middleware name>': { //middleware options }\n *             }\n *         }\n *     }\n * }\n */\nfunction load_(app, baseRoute, options) {\n    const Router = app.tryRequire('@koa/router');\n\n    let router = baseRoute === '/' ? new Router() : new Router({ prefix: text.dropIfEndsWith(baseRoute, '/') });\n\n    if (options.middlewares) {\n        app.useMiddlewares(router, options.middlewares);\n    }\n\n    _.forOwn(options.rules || {}, (methods, subRoute) => {\n        let pos = subRoute.indexOf(':/');\n\n        if (pos !== -1) {\n            if (pos === 0) {\n                throw new InvalidConfiguration(\n                    'Invalid route rule syntax: ' + subRoute,\n                    app,\n                    `routing[${baseRoute}].rule.rules`\n                );\n            }\n\n            // like get:/, or post:/\n\n            let embeddedMethod = subRoute.substr(0, pos).toLocaleLowerCase();\n            subRoute = subRoute.substr(pos + 2);\n\n            methods = { [embeddedMethod]: methods };\n        }\n\n        subRoute = text.ensureStartsWith(subRoute, '/');\n\n        if (typeof methods === 'string' || Array.isArray(methods)) {\n            methods = { get: methods };\n        }\n\n        _.forOwn(methods, (middlewares, method) => {\n            if (!supportedMethods.has(method) && method !== 'all') {\n                throw new InvalidConfiguration(\n                    'Unsupported http method: ' + method,\n                    app,\n                    `routing[${baseRoute}].rule.rules[${subRoute}]`\n                );\n            }\n\n            app.addRoute(router, method, subRoute, middlewares);\n        });\n    });\n\n    app.addRouter(router);\n}\n\nexport default load_;\n"],"names":["load_","app","baseRoute","options","Router","tryRequire","router","prefix","text","dropIfEndsWith","middlewares","useMiddlewares","_","forOwn","rules","methods","subRoute","pos","indexOf","InvalidConfiguration","embeddedMethod","substr","toLocaleLowerCase","ensureStartsWith","Array","isArray","get","method","supportedMethods","has","addRoute","addRouter"],"mappings":"oGAgGA,iDAAA,iCAhGwB,uCACa,yCACJ,cA2CjC,SAASA,MAAMC,GAAG,CAAEC,SAAS,CAAEC,OAAO,CAAE,CACpC,MAAMC,OAASH,IAAII,UAAU,CAAC,eAE9B,IAAIC,OAASJ,YAAc,IAAM,IAAIE,OAAW,IAAIA,OAAO,CAAEG,OAAQC,WAAI,CAACC,cAAc,CAACP,UAAW,IAAK,EAAE,CAE3G,GAAIC,QAAQO,WAAW,CAAE,CACrBT,IAAIU,cAAc,CAACL,OAAQH,QAAQO,WAAW,CAClD,CAAC,AAEDE,QAAC,CAACC,MAAM,CAACV,QAAQW,KAAK,EAAI,CAAC,EAAG,CAACC,QAASC,WAAa,CACjD,IAAIC,IAAMD,SAASE,OAAO,CAAC,MAE3B,GAAID,MAAQ,CAAC,EAAG,CACZ,GAAIA,MAAQ,EAAG,CACX,MAAM,IAAIE,2BAAoB,CAC1B,8BAAgCH,SAChCf,IACA,CAAC,QAAQ,EAAEC,UAAU,YAAY,CAAC,CACpC,AACN,CAAC,AAID,IAAIkB,eAAiBJ,SAASK,MAAM,CAAC,EAAGJ,KAAKK,iBAAiB,GAC9DN,SAAWA,SAASK,MAAM,CAACJ,IAAM,GAEjCF,QAAU,CAAE,CAACK,eAAe,CAAEL,OAAQ,CAC1C,CAAC,AAEDC,SAAWR,WAAI,CAACe,gBAAgB,CAACP,SAAU,KAE3C,GAAI,OAAOD,UAAY,UAAYS,MAAMC,OAAO,CAACV,SAAU,CACvDA,QAAU,CAAEW,IAAKX,OAAQ,CAC7B,CAAC,AAEDH,QAAC,CAACC,MAAM,CAACE,QAAS,CAACL,YAAaiB,SAAW,CACvC,GAAI,CAACC,yBAAgB,CAACC,GAAG,CAACF,SAAWA,SAAW,MAAO,CACnD,MAAM,IAAIR,2BAAoB,CAC1B,4BAA8BQ,OAC9B1B,IACA,CAAC,QAAQ,EAAEC,UAAU,aAAa,EAAEc,SAAS,CAAC,CAAC,CACjD,AACN,CAAC,AAEDf,IAAI6B,QAAQ,CAACxB,OAAQqB,OAAQX,SAAUN,YAC3C,EACJ,GAEAT,IAAI8B,SAAS,CAACzB,OAClB,OAEA,SAAeN"}