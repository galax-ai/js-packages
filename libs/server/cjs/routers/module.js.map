{"version":3,"sources":["../../lib/routers/module.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst { _, url: urlUtil, text } = require(\"@genx/july\");\nconst Literal = require(\"../enum/Literal\");\nconst Router = require(\"@koa/router\");\nconst { InvalidConfiguration } = require(\"@genx/error\");\n\n/**\n * Module router for mounting a specific controller.\n * @module Router_Module\n */\n\n/**\n * Create a module-based router.\n * @param {Routable} app\n * @param {string} baseRoute\n * @param {*} moduleItem\n * @example\n *   '<base path>': {\n *       module: {\n *           middlewares:\n *           controller:\n *       }\n *   }\n *\n *   '<base path>': {\n *       module: \"controller\"\n *   }\n */\nmodule.exports = function (app, baseRoute, moduleItem) {\n    let controllerPath = path.join(app.backendPath, Literal.CONTROLLERS_PATH);\n\n    if (typeof moduleItem === \"string\") {\n        // [ 'controllerName' ]\n        moduleItem = {\n            controller: moduleItem,\n        };\n    }\n\n    let currentPrefix = urlUtil.join(baseRoute, moduleItem.route || \"/\");\n    let router = currentPrefix === \"/\" ? new Router() : new Router({ prefix: text.dropIfEndsWith(currentPrefix, \"/\") });\n\n    if (moduleItem.middlewares) {\n        //module-wide middlewares\n        app.useMiddlewares(router, moduleItem.middlewares);\n    }\n\n    const controllers = _.castArray(moduleItem.controller);\n\n    controllers.forEach((moduleController) => {\n        let controllerFile = path.join(controllerPath, moduleController + \".js\");\n        let controller;\n\n        controller = require(controllerFile);\n        let isController = false;\n\n        if (typeof controller === \"function\") {\n            controller = new controller(app);\n            isController = true;\n        }\n\n        for (let actionName in controller) {\n            let action = controller[actionName];\n            if (typeof action !== \"function\" || !action.__metaHttpMethod) continue; // only marked httpMethod should be mounted\n\n            const method = action.__metaHttpMethod;\n            let subRoute = text.ensureStartsWith(action.__metaRoute || _.kebabCase(actionName), \"/\");\n\n            let bindAction;\n\n            if (isController) {\n                bindAction = action.bind(controller);\n            } else {\n                bindAction = action;\n            }\n\n            if (!Literal.ALLOWED_HTTP_METHODS.has(method)) {\n                throw new InvalidConfiguration(\n                    \"Unsupported http method: \" + method,\n                    app,\n                    `routing.${baseRoute}.modules ${moduleItem.controller}.${actionName}`\n                );\n            }\n\n            app.addRoute(\n                router,\n                method,\n                subRoute,\n                action.__metaMiddlewares ? action.__metaMiddlewares.concat([bindAction]) : bindAction\n            );\n        }\n    });\n\n    app.addRouter(router);\n};\n"],"names":["path","require","_","url","urlUtil","text","Literal","Router","InvalidConfiguration","module","exports","app","baseRoute","moduleItem","controllerPath","join","backendPath","CONTROLLERS_PATH","controller","currentPrefix","route","router","prefix","dropIfEndsWith","middlewares","useMiddlewares","controllers","castArray","forEach","moduleController","controllerFile","isController","actionName","action","__metaHttpMethod","method","subRoute","ensureStartsWith","__metaRoute","kebabCase","bindAction","bind","ALLOWED_HTTP_METHODS","has","addRoute","__metaMiddlewares","concat","addRouter"],"mappings":"AAAA,aAEA,MAAMA,KAAOC,QAAQ,QACrB,KAAM,CAAEC,CAAC,CAAEC,IAAKC,OAAO,CAAEC,IAAI,CAAE,CAAGJ,QAAQ,cAC1C,MAAMK,QAAUL,QAAQ,mBACxB,MAAMM,OAASN,QAAQ,eACvB,KAAM,CAAEO,oBAAoB,CAAE,CAAGP,QAAQ,cAwBzCQ,CAAAA,OAAOC,OAAO,CAAG,SAAUC,GAAG,CAAEC,SAAS,CAAEC,UAAU,CAAE,CACnD,IAAIC,eAAiBd,KAAKe,IAAI,CAACJ,IAAIK,WAAW,CAAEV,QAAQW,gBAAgB,EAExE,GAAI,OAAOJ,aAAe,SAAU,CAEhCA,WAAa,CACTK,WAAYL,UAChB,CACJ,CAAC,AAED,IAAIM,cAAgBf,QAAQW,IAAI,CAACH,UAAWC,WAAWO,KAAK,EAAI,KAChE,IAAIC,OAASF,gBAAkB,IAAM,IAAIZ,OAAW,IAAIA,OAAO,CAAEe,OAAQjB,KAAKkB,cAAc,CAACJ,cAAe,IAAK,EAAE,CAEnH,GAAIN,WAAWW,WAAW,CAAE,CAExBb,IAAIc,cAAc,CAACJ,OAAQR,WAAWW,WAAW,CACrD,CAAC,AAED,MAAME,YAAcxB,EAAEyB,SAAS,CAACd,WAAWK,UAAU,EAErDQ,YAAYE,OAAO,CAAC,AAACC,kBAAqB,CACtC,IAAIC,eAAiB9B,KAAKe,IAAI,CAACD,eAAgBe,iBAAmB,OAClE,IAAIX,WAEJA,WAAajB,QAAQ6B,gBACrB,IAAIC,aAAe,KAAK,CAExB,GAAI,OAAOb,aAAe,WAAY,CAClCA,WAAa,IAAIA,WAAWP,KAC5BoB,aAAe,IAAI,AACvB,CAAC,AAED,IAAK,IAAIC,cAAcd,WAAY,CAC/B,IAAIe,OAASf,UAAU,CAACc,WAAW,CACnC,GAAI,OAAOC,SAAW,YAAc,CAACA,OAAOC,gBAAgB,CAAE,QAAS,CAEvE,MAAMC,OAASF,OAAOC,gBAAgB,CACtC,IAAIE,SAAW/B,KAAKgC,gBAAgB,CAACJ,OAAOK,WAAW,EAAIpC,EAAEqC,SAAS,CAACP,YAAa,KAEpF,IAAIQ,WAEJ,GAAIT,aAAc,CACdS,WAAaP,OAAOQ,IAAI,CAACvB,WAC7B,KAAO,CACHsB,WAAaP,MACjB,CAAC,AAED,GAAI,CAAC3B,QAAQoC,oBAAoB,CAACC,GAAG,CAACR,QAAS,CAC3C,MAAM,IAAI3B,qBACN,4BAA8B2B,OAC9BxB,IACA,CAAC,QAAQ,EAAEC,UAAU,SAAS,EAAEC,WAAWK,UAAU,CAAC,CAAC,EAAEc,WAAW,CAAC,CACvE,AACN,CAAC,AAEDrB,IAAIiC,QAAQ,CACRvB,OACAc,OACAC,SACAH,OAAOY,iBAAiB,CAAGZ,OAAOY,iBAAiB,CAACC,MAAM,CAAC,CAACN,WAAW,EAAIA,UAAU,CAE7F,CACJ,GAEA7B,IAAIoC,SAAS,CAAC1B,OAClB"}