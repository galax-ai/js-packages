{"version":3,"sources":["../../lib/routers/module.js"],"sourcesContent":["import path from 'node:path';\nimport { _, url as urlUtil, text, esmCheck } from '@galaxar/utils';\nimport { InvalidConfiguration } from '@galaxar/types';\nimport { supportedMethods } from '../helpers';\n\n/**\n * Module router for mounting a specific controller.\n * @module Router_Module\n */\n\n/**\n * Create a module-based router.\n * @param {Routable} app\n * @param {string} baseRoute\n * @param {*} moduleItem\n * @example\n *   '<base path>': {\n *       module: {\n *           middlewares:\n *           controller:\n *       }\n *   }\n *\n *   '<base path>': {\n *       module: \"controller\"\n *   }\n */\nfunction moduleRouter(app, baseRoute, moduleItem) {\n    const Router = app.tryRequire('@koa/router');\n\n    let controllerPath = app.controllersPath;\n\n    if (typeof moduleItem === 'string') {\n        // [ 'controllerName' ]\n        moduleItem = {\n            controller: moduleItem,\n        };\n    }\n\n    let currentPrefix = urlUtil.join(baseRoute, moduleItem.route || '/');\n    let router = currentPrefix === '/' ? new Router() : new Router({ prefix: text.dropIfEndsWith(currentPrefix, '/') });\n\n    if (moduleItem.middlewares) {\n        //module-wide middlewares\n        app.useMiddlewares(router, moduleItem.middlewares);\n    }\n\n    let controllers;\n\n    if (moduleItem.controllers) {\n        controllers = moduleItem.controllers;\n        if (!Array.isArray(controllers)) {\n            throw new InvalidConfiguration(\n                'Invalid module router configuration: controllers must be an array.',\n                app,\n                `routing.${baseRoute}.module.controllers`\n            );\n        }\n    } else {\n        if (typeof moduleItem.controller !== 'string') {\n            throw new InvalidConfiguration(\n                'Invalid module router configuration: controller must be a string.',\n                app,\n                `routing.${baseRoute}.module.controller`\n            );\n        }\n\n        controllers = [moduleItem.controller];\n    }\n\n    controllers.forEach((moduleController) => {\n        let controllerFile = path.join(controllerPath, moduleController);\n        let controller;\n\n        try {\n            controller = esmCheck(require(controllerFile));\n        } catch (e) {\n            if (e.code === 'MODULE_NOT_FOUND') {\n                throw new InvalidConfiguration(\n                    `Failed to load controller '${moduleController}'. ${e.message}`,\n                    app,\n                    `routing.${baseRoute}.module`\n                );\n            }\n\n            throw e;\n        }\n\n        let isController = false;\n\n        if (typeof controller === 'function') {\n            controller = new controller(app);\n            isController = true;\n        }\n\n        for (let actionName in controller) {\n            let action = controller[actionName];\n            if (typeof action !== 'function' || !action.__metaHttpMethod) continue; // only marked httpMethod should be mounted\n\n            const method = action.__metaHttpMethod;\n            let subRoute = text.ensureStartsWith(action.__metaRoute || _.kebabCase(actionName), '/');\n\n            let bindAction;\n\n            if (isController) {\n                bindAction = action.bind(controller);\n            } else {\n                bindAction = action;\n            }\n\n            if (!supportedMethods.has(method)) {\n                throw new InvalidConfiguration(\n                    'Unsupported http method: ' + method,\n                    app,\n                    `routing.${baseRoute}.module ${moduleItem.controller}.${actionName}`\n                );\n            }\n\n            app.addRoute(\n                router,\n                method,\n                subRoute,\n                action.__metaMiddlewares ? action.__metaMiddlewares.concat([bindAction]) : bindAction\n            );\n        }\n    });\n\n    app.addRouter(router);\n}\n\nexport default moduleRouter;\n"],"names":["moduleRouter","app","baseRoute","moduleItem","Router","tryRequire","controllerPath","controllersPath","controller","currentPrefix","urlUtil","join","route","router","prefix","text","dropIfEndsWith","middlewares","useMiddlewares","controllers","Array","isArray","InvalidConfiguration","forEach","moduleController","controllerFile","path","esmCheck","require","e","code","message","isController","actionName","action","__metaHttpMethod","method","subRoute","ensureStartsWith","__metaRoute","_","kebabCase","bindAction","bind","supportedMethods","has","addRoute","__metaMiddlewares","concat","addRouter"],"mappings":"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"}