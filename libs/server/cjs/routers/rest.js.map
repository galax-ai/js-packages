{"version":3,"sources":["../../lib/routers/rest.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst { _, text } = require(\"@genx/july\");\nconst { glob } = require(\"@genx/sys\");\nconst Router = require(\"@koa/router\");\nconst Literal = require(\"../enum/Literal\");\nconst { hasMethod } = require(\"../helpers/Helpers\");\n\n/**\n * RESTful router.\n * @module Router_Rest\n */\n\n/**\n * Create a RESTful router.\n * @param {*} app\n * @param {string} baseRoute\n * @param {objects} options\n * @property {string} [options.resourcesPath]\n * @property {object|array} [options.middlewares]\n * @example\n *  '<base path>': {\n *      rest: {\n *          resourcesPath:\n *          middlewares:\n *      }\n *  }\n *\n *  route                          http method    function of ctrl\n *  /:resource                     get            query\n *  /:resource                     post           create\n *  /:resource/:id                 get            detail\n *  /:resource/:id                 put            update\n *  /:resource/:id                 delete         remove\n */\nmodule.exports = (app, baseRoute, options) => {\n    let resourcePath = path.resolve(app.backendPath, options.resourcesPath || Literal.RESOURCES_PATH);\n\n    let router = baseRoute === \"/\" ? new Router() : new Router({ prefix: text.dropIfEndsWith(baseRoute, \"/\") });\n\n    app.useMiddleware(router, app.getMiddlewareFactory(\"jsonError\")(options.errorOptions, app), \"jsonError\");\n\n    if (options.middlewares) {\n        app.useMiddlewares(router, options.middlewares);\n    }\n\n    let resourcesPath = path.join(resourcePath, \"**\", \"*.js\");\n    let files = glob.sync(resourcesPath, { nodir: true });\n\n    _.each(files, (file) => {\n        let relPath = path.relative(resourcePath, file);\n        let batchUrl = text.ensureStartsWith(\n            relPath\n                .substring(0, relPath.length - 3)\n                .split(path.sep)\n                .map((p) => _.kebabCase(p))\n                .join(\"/\"),\n            \"/\"\n        );\n        let singleUrl = batchUrl + \"/:id\";\n\n        let controller = require(file);\n\n        if (typeof controller === \"function\") {\n            controller = new controller(app);\n        }\n\n        if (hasMethod(controller, \"query\")) {\n            app.addRoute(router, \"get\", batchUrl, (ctx) => controller.query(ctx));\n        }\n\n        if (hasMethod(controller, \"create\")) {\n            app.addRoute(router, \"post\", batchUrl, (ctx) => controller.create(ctx));\n        }\n\n        if (hasMethod(controller, \"detail\")) {\n            app.addRoute(router, \"get\", singleUrl, (ctx) => controller.detail(ctx));\n        }\n\n        if (hasMethod(controller, \"update\")) {\n            app.addRoute(router, \"put\", singleUrl, (ctx) => controller.update(ctx));\n        }\n\n        if (hasMethod(controller, \"remove\")) {\n            app.addRoute(router, \"del\", singleUrl, (ctx) => controller.remove(ctx));\n        }\n    });\n\n    app.addRouter(router);\n};\n"],"names":["path","require","_","text","glob","Router","Literal","hasMethod","module","exports","app","baseRoute","options","resourcePath","resolve","backendPath","resourcesPath","RESOURCES_PATH","router","prefix","dropIfEndsWith","useMiddleware","getMiddlewareFactory","errorOptions","middlewares","useMiddlewares","join","files","sync","nodir","each","file","relPath","relative","batchUrl","ensureStartsWith","substring","length","split","sep","map","p","kebabCase","singleUrl","controller","addRoute","ctx","query","create","detail","update","remove","addRouter"],"mappings":"AAAA,aAEA,MAAMA,KAAOC,QAAQ,QACrB,KAAM,CAAEC,CAAC,CAAEC,IAAI,CAAE,CAAGF,QAAQ,cAC5B,KAAM,CAAEG,IAAI,CAAE,CAAGH,QAAQ,aACzB,MAAMI,OAASJ,QAAQ,eACvB,MAAMK,QAAUL,QAAQ,mBACxB,KAAM,CAAEM,SAAS,CAAE,CAAGN,QAAQ,qBA6B9BO,CAAAA,OAAOC,OAAO,CAAG,CAACC,IAAKC,UAAWC,UAAY,CAC1C,IAAIC,aAAeb,KAAKc,OAAO,CAACJ,IAAIK,WAAW,CAAEH,QAAQI,aAAa,EAAIV,QAAQW,cAAc,EAEhG,IAAIC,OAASP,YAAc,IAAM,IAAIN,OAAW,IAAIA,OAAO,CAAEc,OAAQhB,KAAKiB,cAAc,CAACT,UAAW,IAAK,EAAE,CAE3GD,IAAIW,aAAa,CAACH,OAAQR,IAAIY,oBAAoB,CAAC,aAAaV,QAAQW,YAAY,CAAEb,KAAM,aAE5F,GAAIE,QAAQY,WAAW,CAAE,CACrBd,IAAIe,cAAc,CAACP,OAAQN,QAAQY,WAAW,CAClD,CAAC,AAED,IAAIR,cAAgBhB,KAAK0B,IAAI,CAACb,aAAc,KAAM,QAClD,IAAIc,MAAQvB,KAAKwB,IAAI,CAACZ,cAAe,CAAEa,MAAO,IAAI,AAAC,GAEnD3B,EAAE4B,IAAI,CAACH,MAAO,AAACI,MAAS,CACpB,IAAIC,QAAUhC,KAAKiC,QAAQ,CAACpB,aAAckB,MAC1C,IAAIG,SAAW/B,KAAKgC,gBAAgB,CAChCH,QACKI,SAAS,CAAC,EAAGJ,QAAQK,MAAM,CAAG,GAC9BC,KAAK,CAACtC,KAAKuC,GAAG,EACdC,GAAG,CAAC,AAACC,GAAMvC,EAAEwC,SAAS,CAACD,IACvBf,IAAI,CAAC,KACV,KAEJ,IAAIiB,UAAYT,SAAW,OAE3B,IAAIU,WAAa3C,QAAQ8B,MAEzB,GAAI,OAAOa,aAAe,WAAY,CAClCA,WAAa,IAAIA,WAAWlC,IAChC,CAAC,AAED,GAAIH,UAAUqC,WAAY,SAAU,CAChClC,IAAImC,QAAQ,CAAC3B,OAAQ,MAAOgB,SAAU,AAACY,KAAQF,WAAWG,KAAK,CAACD,KACpE,CAAC,AAED,GAAIvC,UAAUqC,WAAY,UAAW,CACjClC,IAAImC,QAAQ,CAAC3B,OAAQ,OAAQgB,SAAU,AAACY,KAAQF,WAAWI,MAAM,CAACF,KACtE,CAAC,AAED,GAAIvC,UAAUqC,WAAY,UAAW,CACjClC,IAAImC,QAAQ,CAAC3B,OAAQ,MAAOyB,UAAW,AAACG,KAAQF,WAAWK,MAAM,CAACH,KACtE,CAAC,AAED,GAAIvC,UAAUqC,WAAY,UAAW,CACjClC,IAAImC,QAAQ,CAAC3B,OAAQ,MAAOyB,UAAW,AAACG,KAAQF,WAAWM,MAAM,CAACJ,KACtE,CAAC,AAED,GAAIvC,UAAUqC,WAAY,UAAW,CACjClC,IAAImC,QAAQ,CAAC3B,OAAQ,MAAOyB,UAAW,AAACG,KAAQF,WAAWO,MAAM,CAACL,KACtE,CAAC,AACL,GAEApC,IAAI0C,SAAS,CAAClC,OAClB"}