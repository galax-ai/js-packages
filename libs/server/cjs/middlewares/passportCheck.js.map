{"version":3,"sources":["../../lib/middlewares/passportCheck.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Middleware to check user logged in status based on passport\n * @module Middleware_PassportCheck\n */\n\nconst HttpCode = require('http-status-codes');\n\n/**\n * Initialize ensureLoggedIn middleware\n * @param {object} options\n * @property {string} [options.loginUrl] - If given, will redirect to loginUrl if not loggedIn\n * @property {boolean} [options.successReturnToOrRedirect] - If given, will redirect to loginUrl if not loggedIn \n * @param {Routable} app\n */  \nmodule.exports = (options, app) => {\n    return async (ctx, next) => {\n        if (ctx.isAuthenticated()) {\n            return next();\n        }\n\n        if (options.successReturnToOrRedirect && ctx.session) {\n            ctx.session.returnTo = ctx.originalUrl || ctx.url;            \n        }\n\n        if (!options.loginUrl) {\n            ctx.throw(HttpCode.UNAUTHORIZED, 'authentication required');\n        }\n\n        return ctx.redirect(options.loginUrl);\n    }\n};"],"names":["HttpCode","require","module","exports","options","app","ctx","next","isAuthenticated","successReturnToOrRedirect","session","returnTo","originalUrl","url","loginUrl","throw","UNAUTHORIZED","redirect"],"mappings":"AAAA,aAOA,MAAMA,SAAWC,QAAQ,oBASzBC,CAAAA,OAAOC,OAAO,CAAG,CAACC,QAASC,MAAQ,CAC/B,OAAO,MAAOC,IAAKC,OAAS,CACxB,GAAID,IAAIE,eAAe,GAAI,CACvB,OAAOD,MACX,CAAC,AAED,GAAIH,QAAQK,yBAAyB,EAAIH,IAAII,OAAO,CAAE,CAClDJ,IAAII,OAAO,CAACC,QAAQ,CAAGL,IAAIM,WAAW,EAAIN,IAAIO,GAAG,AACrD,CAAC,AAED,GAAI,CAACT,QAAQU,QAAQ,CAAE,CACnBR,IAAIS,KAAK,CAACf,SAASgB,YAAY,CAAE,0BACrC,CAAC,AAED,OAAOV,IAAIW,QAAQ,CAACb,QAAQU,QAAQ,CACxC,CACJ"}