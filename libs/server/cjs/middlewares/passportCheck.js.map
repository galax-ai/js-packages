{"version":3,"sources":["../../lib/middlewares/passportCheck.js"],"sourcesContent":["/**\n * Middleware to check user logged in status based on passport\n * @module Middleware_PassportCheck\n */\n\nimport { HttpCode } from \"@galaxar/types\";\n\n/**\n * Initialize ensureLoggedIn middleware\n * @param {object} options\n * @property {string} [options.loginUrl] - If given, will redirect to loginUrl if not loggedIn\n * @property {boolean} [options.successReturnToOrRedirect] - If given, will redirect to loginUrl if not loggedIn \n * @param {Routable} app\n */  \nconst passportCheck = (options, app) => {\n    return async (ctx, next) => {\n        if (ctx.isAuthenticated()) {\n            return next();\n        }\n\n        if (options.successReturnToOrRedirect && ctx.session) {\n            ctx.session.returnTo = ctx.originalUrl || ctx.url;            \n        }\n\n        if (!options.loginUrl) {\n            ctx.throw(HttpCode.UNAUTHORIZED, 'authentication required');\n        }\n\n        return ctx.redirect(options.loginUrl);\n    }\n};\n\nexport default passportCheck;"],"names":["passportCheck","options","app","ctx","next","isAuthenticated","successReturnToOrRedirect","session","returnTo","originalUrl","url","loginUrl","throw","HttpCode","UNAUTHORIZED","redirect"],"mappings":"oGAgCA,iDAAA,iCA3ByB,kBASzB,MAAMA,cAAgB,CAACC,QAASC,MAAQ,CACpC,OAAO,MAAOC,IAAKC,OAAS,CACxB,GAAID,IAAIE,eAAe,GAAI,CACvB,OAAOD,MACX,CAAC,AAED,GAAIH,QAAQK,yBAAyB,EAAIH,IAAII,OAAO,CAAE,CAClDJ,IAAII,OAAO,CAACC,QAAQ,CAAGL,IAAIM,WAAW,EAAIN,IAAIO,GAAG,AACrD,CAAC,AAED,GAAI,CAACT,QAAQU,QAAQ,CAAE,CACnBR,IAAIS,KAAK,CAACC,eAAQ,CAACC,YAAY,CAAE,0BACrC,CAAC,AAED,OAAOX,IAAIY,QAAQ,CAACd,QAAQU,QAAQ,CACxC,CACJ,QAEA,SAAeX"}