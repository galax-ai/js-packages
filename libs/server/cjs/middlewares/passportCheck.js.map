{"version":3,"sources":["../../lib/middlewares/passportCheck.js"],"sourcesContent":["/**\n * Middleware to check user logged in status based on passport\n * @module Middleware_PassportCheck\n */\n\nimport { HttpCode } from '@galaxar/types';\n\n/**\n * Initialize ensureLoggedIn middleware\n * @param {object} options\n * @property {string} [options.loginUrl] - If given, will redirect to loginUrl if not loggedIn\n * @property {boolean} [options.successReturnToOrRedirect] - If given, will redirect to loginUrl if not loggedIn\n * @param {Routable} app\n */\nconst passportCheck = (options, app) => {\n    return async (ctx, next) => {\n        if (ctx.isAuthenticated()) {\n            return next();\n        }\n\n        if (options.successReturnToOrRedirect && ctx.session) {\n            ctx.session.returnTo = ctx.originalUrl || ctx.url;\n        }\n\n        if (!options.loginUrl) {\n            ctx.throw(HttpCode.UNAUTHORIZED, 'authentication required');\n        }\n\n        return ctx.redirect(options.loginUrl);\n    };\n};\n\nexport default passportCheck;\n"],"names":["passportCheck","options","app","ctx","next","isAuthenticated","successReturnToOrRedirect","session","returnTo","originalUrl","url","loginUrl","throw","HttpCode","UNAUTHORIZED","redirect"],"mappings":"AAAA;;;CAGC;;;;+BA6BD;;;eAAA;;;uBA3ByB;AAEzB;;;;;;CAMC,GACD,MAAMA,gBAAgB,CAACC,SAASC,MAAQ;IACpC,OAAO,OAAOC,KAAKC,OAAS;QACxB,IAAID,IAAIE,eAAe,IAAI;YACvB,OAAOD;QACX,CAAC;QAED,IAAIH,QAAQK,yBAAyB,IAAIH,IAAII,OAAO,EAAE;YAClDJ,IAAII,OAAO,CAACC,QAAQ,GAAGL,IAAIM,WAAW,IAAIN,IAAIO,GAAG;QACrD,CAAC;QAED,IAAI,CAACT,QAAQU,QAAQ,EAAE;YACnBR,IAAIS,KAAK,CAACC,eAAQ,CAACC,YAAY,EAAE;QACrC,CAAC;QAED,OAAOX,IAAIY,QAAQ,CAACd,QAAQU,QAAQ;IACxC;AACJ;MAEA,WAAeX"}