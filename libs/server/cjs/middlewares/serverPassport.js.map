{"version":3,"sources":["../../lib/middlewares/serverPassport.js"],"sourcesContent":["import { InvalidConfiguration } from '@galaxar/types';\n\n/**\n * Passport initialization middleware, use the passport service exposed by other app to server.\n * @module Middleware_ServerPassport\n */\n\n/**\n * Create a passport authentication middleware.\n * @param {object} opt - Passport options\n * @property {string} opt.strategy - Passport strategy\n * @property {object} [opt.options] - Passport strategy options\n * @property {object} [opt.customHandler] - Flag to use passport strategy customHandler\n * @param {Routable} app\n * @returns {KoaActionFunction}\n */\nconst serverPassport = (opt, app) => {\n    let passportService = app.getService('passport');\n\n    if (!passportService) {\n        throw new InvalidConfiguration('Passport feature is not enabled.', app, 'passport');\n    }\n\n    return passportService.middlewares;\n};\n\nexport default serverPassport;\n"],"names":["serverPassport","opt","app","passportService","getService","InvalidConfiguration","middlewares"],"mappings":"oGA0BA,iDAAA,iCA1BqC,kBAgBrC,MAAMA,eAAiB,CAACC,IAAKC,MAAQ,CACjC,IAAIC,gBAAkBD,IAAIE,UAAU,CAAC,YAErC,GAAI,CAACD,gBAAiB,CAClB,MAAM,IAAIE,2BAAoB,CAAC,mCAAoCH,IAAK,WAAY,AACxF,CAAC,AAED,OAAOC,gBAAgBG,WAAW,AACtC,QAEA,SAAeN"}