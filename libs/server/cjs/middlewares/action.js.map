{"version":3,"sources":["../../lib/middlewares/action.js"],"sourcesContent":["/**\n * Response action as middleware\n * @module Middleware_Action\n */\n\nimport path from 'node:path';\nimport { InvalidConfiguration } from '@galaxar/types';\n\n/**\n * Action middleware creator\n * @param {string} controllerAction\n * @param {Routable} app\n */\nconst action = (controllerAction, app) => {\n    if (typeof controllerAction !== 'string') {\n        throw new InvalidConfiguration('Invalid action syntax.', app);\n    }\n\n    let pos = controllerAction.lastIndexOf('.');\n    if (pos < 0) {\n        throw new InvalidConfiguration(`Unrecognized controller & action syntax: ${controllerAction}.`, app);\n    }\n\n    let controller = controllerAction.substring(0, pos);\n    let action = controllerAction.substring(pos + 1);\n\n    let controllerPath = path.resolve(app.controllersPath, controller);\n    let ctrl;\n\n    try {\n        ctrl = require(controllerPath);\n        if (ctrl.__esModule && ctrl.default) {\n            // ES6 default export\n            ctrl = ctrl.default;\n        }\n    } catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n            throw new InvalidConfiguration(`Failed to load [${controller}] at ${controllerPath}. ${err.message}`, app, {\n                app: app.name,\n                controller,\n            });\n        }\n    }\n\n    let actioner = ctrl[action];\n\n    if (Array.isArray(actioner)) {\n        let actionFunction = actioner.concat().pop();\n        if (typeof actionFunction !== 'function') {            \n            throw new InvalidConfiguration(\n                `${controllerAction} does not contain a valid action in returned middleware chain.`,\n                app\n            );\n        }\n\n        return actioner.concat(actionFunction);\n    }\n\n    if (typeof actioner !== 'function') {\n        throw new InvalidConfiguration(`${controllerAction} is not a valid action.`, app);\n    }\n\n    return actioner;\n};\n\nexport default action;\n"],"names":["action","controllerAction","app","InvalidConfiguration","pos","lastIndexOf","controller","substring","controllerPath","path","resolve","controllersPath","ctrl","require","__esModule","default","err","code","message","name","actioner","Array","isArray","actionFunction","concat","pop"],"mappings":"oGAiEA,iDAAA,6DA5DiB,mCACoB,sGAOrC,MAAMA,OAAS,CAACC,iBAAkBC,MAAQ,CACtC,GAAI,OAAOD,mBAAqB,SAAU,CACtC,MAAM,IAAIE,2BAAoB,CAAC,yBAA0BD,IAAK,AAClE,CAAC,AAED,IAAIE,IAAMH,iBAAiBI,WAAW,CAAC,KACvC,GAAID,IAAM,EAAG,CACT,MAAM,IAAID,2BAAoB,CAAC,CAAC,yCAAyC,EAAEF,iBAAiB,CAAC,CAAC,CAAEC,IAAK,AACzG,CAAC,AAED,IAAII,WAAaL,iBAAiBM,SAAS,CAAC,EAAGH,KAC/C,IAAIJ,OAASC,iBAAiBM,SAAS,CAACH,IAAM,GAE9C,IAAII,eAAiBC,iBAAI,CAACC,OAAO,CAACR,IAAIS,eAAe,CAAEL,YACvD,IAAIM,KAEJ,GAAI,CACAA,KAAOC,QAAQL,gBACf,GAAII,KAAKE,UAAU,EAAIF,KAAKG,OAAO,CAAE,CAEjCH,KAAOA,KAAKG,OAAO,AACvB,CAAC,AACL,CAAE,MAAOC,IAAK,CACV,GAAIA,IAAIC,IAAI,GAAK,mBAAoB,CACjC,MAAM,IAAId,2BAAoB,CAAC,CAAC,gBAAgB,EAAEG,WAAW,KAAK,EAAEE,eAAe,EAAE,EAAEQ,IAAIE,OAAO,CAAC,CAAC,CAAEhB,IAAK,CACvGA,IAAKA,IAAIiB,IAAI,CACbb,UACJ,EAAG,AACP,CAAC,AACL,CAEA,IAAIc,SAAWR,IAAI,CAACZ,OAAO,CAE3B,GAAIqB,MAAMC,OAAO,CAACF,UAAW,CACzB,IAAIG,eAAiBH,SAASI,MAAM,GAAGC,GAAG,GAC1C,GAAI,OAAOF,iBAAmB,WAAY,CACtC,MAAM,IAAIpB,2BAAoB,CAC1B,CAAC,EAAEF,iBAAiB,8DAA8D,CAAC,CACnFC,IACF,AACN,CAAC,AAED,OAAOkB,SAASI,MAAM,CAACD,eAC3B,CAAC,AAED,GAAI,OAAOH,WAAa,WAAY,CAChC,MAAM,IAAIjB,2BAAoB,CAAC,CAAC,EAAEF,iBAAiB,uBAAuB,CAAC,CAAEC,IAAK,AACtF,CAAC,AAED,OAAOkB,QACX,QAEA,SAAepB"}