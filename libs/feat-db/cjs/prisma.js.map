{"version":3,"sources":["../src/prisma.js"],"sourcesContent":["import { Feature } from '@galaxar/app';\nimport { _ } from '@galaxar/utils';\nimport { PrismaClient } from '@prisma/client';\n\nconst prismsHelper = {\n    $pushQuery: (where, query) => {\n        let { AND, ..._where } = where;\n\n        _.each(query, (value, key) => {\n            const existing = _where[key];\n            if (typeof existing !== 'undefined') {\n                if (!AND) {\n                    AND = [];\n                } else {\n                    AND = [...AND];\n                }\n\n                delete _where[key];\n                AND.push({ [key]: existing });\n                AND.push({\n                    [key]: value,\n                });\n            } else {\n                _where[key] = value;\n            }\n        });\n\n        if (AND) {\n            _where.AND = AND;\n        }\n\n        return _where;\n    },\n    $pushOrQuery: (where, query) => {\n        if (!where.OR) {\n            where = {\n                OR: [where],\n            };\n        } else {\n            where = {\n                OR: [...where.OR],\n            };\n        }\n\n        where.OR.push(query);\n        return where;\n    },\n};\n\nexport default {\n    stage: Feature.SERVICE,\n\n    groupable: true,\n\n    load_: async function (app, options, name) {\n        const prisma = new PrismaClient(options);\n\n        await prisma.$connect();\n\n        app.on('stopping', async () => {\n            await prisma.$disconnect();\n        });\n\n        Object.assign(prisma, prismsHelper);\n\n        app.registerService(name, prisma);\n    },\n};\n"],"names":["prismsHelper","$pushQuery","where","query","AND","_where","_","each","value","key","existing","push","$pushOrQuery","OR","stage","Feature","SERVICE","groupable","load_","app","options","name","prisma","PrismaClient","$connect","on","$disconnect","Object","assign","registerService"],"mappings":";;;;+BAiDA;;;eAAA;;;qBAjDwB;uBACN;wBACW;AAE7B,MAAMA,eAAe;IACjBC,YAAY,CAACC,OAAOC,QAAU;QAC1B,IAAI,EAAEC,IAAG,EAAE,GAAGC,QAAQ,GAAGH;QAEzBI,QAAC,CAACC,IAAI,CAACJ,OAAO,CAACK,OAAOC,MAAQ;YAC1B,MAAMC,WAAWL,MAAM,CAACI,IAAI;YAC5B,IAAI,OAAOC,aAAa,aAAa;gBACjC,IAAI,CAACN,KAAK;oBACNA,MAAM,EAAE;gBACZ,OAAO;oBACHA,MAAM;2BAAIA;qBAAI;gBAClB,CAAC;gBAED,OAAOC,MAAM,CAACI,IAAI;gBAClBL,IAAIO,IAAI,CAAC;oBAAE,CAACF,IAAI,EAAEC;gBAAS;gBAC3BN,IAAIO,IAAI,CAAC;oBACL,CAACF,IAAI,EAAED;gBACX;YACJ,OAAO;gBACHH,MAAM,CAACI,IAAI,GAAGD;YAClB,CAAC;QACL;QAEA,IAAIJ,KAAK;YACLC,OAAOD,GAAG,GAAGA;QACjB,CAAC;QAED,OAAOC;IACX;IACAO,cAAc,CAACV,OAAOC,QAAU;QAC5B,IAAI,CAACD,MAAMW,EAAE,EAAE;YACXX,QAAQ;gBACJW,IAAI;oBAACX;iBAAM;YACf;QACJ,OAAO;YACHA,QAAQ;gBACJW,IAAI;uBAAIX,MAAMW,EAAE;iBAAC;YACrB;QACJ,CAAC;QAEDX,MAAMW,EAAE,CAACF,IAAI,CAACR;QACd,OAAOD;IACX;AACJ;MAEA,WAAe;IACXY,OAAOC,YAAO,CAACC,OAAO;IAEtBC,WAAW,IAAI;IAEfC,OAAO,eAAgBC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAE;QACvC,MAAMC,SAAS,IAAIC,oBAAY,CAACH;QAEhC,MAAME,OAAOE,QAAQ;QAErBL,IAAIM,EAAE,CAAC,YAAY,UAAY;YAC3B,MAAMH,OAAOI,WAAW;QAC5B;QAEAC,OAAOC,MAAM,CAACN,QAAQtB;QAEtBmB,IAAIU,eAAe,CAACR,MAAMC;IAC9B;AACJ"}